"use strict";

var isPromise = require("./isPromise");

var _require = require("./_utils"),
    forEach = _require.forEach,
    mapAuto = _require.mapAuto;

var _all = function _all(promises, mapFn) {
  return new Promise(function (resolve, reject) {
    var result = mapAuto(promises, mapFn);
    var count = 1;

    var onFulfillment0 = function onFulfillment0() {
      if (--count === 0) {
        var tmp = result;
        result = undefined;
        resolve(tmp);
      }
    };

    var onFulfillment = function onFulfillment(value, key) {
      if (!result) {
        return;
      }

      result[key] = value;
      onFulfillment0();
    };

    var onRejection = function onRejection(reason) {
      if (!result) {
        return;
      }

      result = undefined;
      reject(reason);
    };

    forEach(mapFn !== undefined ? result : promises, function (promise, key) {
      ++count;

      if (isPromise(promise)) {
        promise.then(function (value) {
          return onFulfillment(value, key);
        }, onRejection);
      } else {
        onFulfillment(promise, key);
      }
    });
    onFulfillment0();
  });
};

module.exports = function all(mapFn) {
  return isPromise(this) ? this.then(function (collection) {
    return _all(collection, mapFn);
  }) : _all(this, mapFn);
};