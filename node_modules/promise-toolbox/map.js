"use strict";

var defer = require("./defer");

var identity = require("./_identity");

var isPromise = require("./isPromise");

var _require = require("./_utils"),
    applyThen = _require.applyThen,
    forEach = _require.forEach;

var map = function map(collection, iteratee) {
  if (iteratee === void 0) {
    iteratee = identity;
  }

  if (isPromise(collection)) {
    return collection.then(function (collection) {
      return map(collection, iteratee);
    });
  }

  var count = 1;
  var errorContainer;
  var result = [];

  var _defer = defer(),
      promise = _defer.promise,
      reject = _defer.reject,
      resolve = _defer.resolve;

  var onFulfillment = function onFulfillment() {
    if (--count === 0) {
      if (errorContainer !== undefined) {
        reject(errorContainer.error);
      } else {
        resolve(result);
      }
    }
  };

  var onError = function onError(error) {
    if (errorContainer === undefined) {
      errorContainer = {
        error
      };
    }

    onFulfillment();
  };

  var mapItem = function mapItem(args) {
    var item = args[0];

    if (isPromise(item)) {
      return item.then(function (item) {
        args[0] = item;
        return mapItem(args);
      });
    }

    applyThen(iteratee, args, function (value) {
      result[args[3]] = value;
      onFulfillment();
    }, onError);
  };

  var i = 0;
  forEach(collection, function (item, key, collection) {
    ++count;
    mapItem([item, key, collection, i++]);
  });
  onFulfillment();
  return promise;
};

module.exports = function (iteratee) {
  return map(this, iteratee);
};