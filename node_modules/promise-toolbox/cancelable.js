"use strict";

var setFunctionNameAndLength = require("./_setFunctionNameAndLength");

var _require = require("./CancelToken"),
    isCancelToken = _require.isCancelToken,
    source = _require.source;

var cancelable = function cancelable(target, name, descriptor) {
  var fn = descriptor !== undefined ? descriptor.value : target;
  var wrapper = setFunctionNameAndLength(function cancelableWrapper() {
    var length = arguments.length;

    if (length !== 0 && isCancelToken(arguments[0])) {
      return fn.apply(this, arguments);
    }

    var _source = source(),
        cancel = _source.cancel,
        token = _source.token;

    var args = new Array(length + 1);
    args[0] = token;

    for (var i = 0; i < length; ++i) {
      args[i + 1] = arguments[i];
    }

    var promise = fn.apply(this, args);
    promise.cancel = cancel;
    return promise;
  }, fn.name, fn.length - 1);

  if (descriptor !== undefined) {
    descriptor.value = wrapper;
    return descriptor;
  }

  return wrapper;
};

module.exports = cancelable;