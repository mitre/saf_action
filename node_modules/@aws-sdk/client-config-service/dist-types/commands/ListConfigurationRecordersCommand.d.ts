import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { ConfigServiceClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConfigServiceClient";
import { ListConfigurationRecordersRequest, ListConfigurationRecordersResponse } from "../models/models_1";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link ListConfigurationRecordersCommand}.
 */
export interface ListConfigurationRecordersCommandInput extends ListConfigurationRecordersRequest {
}
/**
 * @public
 *
 * The output of {@link ListConfigurationRecordersCommand}.
 */
export interface ListConfigurationRecordersCommandOutput extends ListConfigurationRecordersResponse, __MetadataBearer {
}
declare const ListConfigurationRecordersCommand_base: {
    new (input: ListConfigurationRecordersCommandInput): import("@smithy/smithy-client").CommandImpl<ListConfigurationRecordersCommandInput, ListConfigurationRecordersCommandOutput, ConfigServiceClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (...[input]: [] | [ListConfigurationRecordersCommandInput]): import("@smithy/smithy-client").CommandImpl<ListConfigurationRecordersCommandInput, ListConfigurationRecordersCommandOutput, ConfigServiceClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Returns a list of configuration recorders depending on the filters you specify.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConfigServiceClient, ListConfigurationRecordersCommand } from "@aws-sdk/client-config-service"; // ES Modules import
 * // const { ConfigServiceClient, ListConfigurationRecordersCommand } = require("@aws-sdk/client-config-service"); // CommonJS import
 * const client = new ConfigServiceClient(config);
 * const input = { // ListConfigurationRecordersRequest
 *   Filters: [ // ConfigurationRecorderFilterList
 *     { // ConfigurationRecorderFilter
 *       filterName: "recordingScope",
 *       filterValue: [ // ConfigurationRecorderFilterValues
 *         "STRING_VALUE",
 *       ],
 *     },
 *   ],
 *   MaxResults: Number("int"),
 *   NextToken: "STRING_VALUE",
 * };
 * const command = new ListConfigurationRecordersCommand(input);
 * const response = await client.send(command);
 * // { // ListConfigurationRecordersResponse
 * //   ConfigurationRecorderSummaries: [ // ConfigurationRecorderSummaries // required
 * //     { // ConfigurationRecorderSummary
 * //       arn: "STRING_VALUE", // required
 * //       name: "STRING_VALUE", // required
 * //       servicePrincipal: "STRING_VALUE",
 * //       recordingScope: "INTERNAL" || "PAID", // required
 * //     },
 * //   ],
 * //   NextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListConfigurationRecordersCommandInput - {@link ListConfigurationRecordersCommandInput}
 * @returns {@link ListConfigurationRecordersCommandOutput}
 * @see {@link ListConfigurationRecordersCommandInput} for command's `input` shape.
 * @see {@link ListConfigurationRecordersCommandOutput} for command's `response` shape.
 * @see {@link ConfigServiceClientResolvedConfig | config} for ConfigServiceClient's `config` shape.
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>The requested operation is not valid. You will see this exception if there are missing required fields or if the input value fails the validation.</p>
 *          <p>For <a href="https://docs.aws.amazon.com/config/latest/APIReference/API_PutStoredQuery.html">PutStoredQuery</a>, one of the following errors:</p>
 *          <ul>
 *             <li>
 *                <p>There are missing required fields.</p>
 *             </li>
 *             <li>
 *                <p>The input value fails the validation.</p>
 *             </li>
 *             <li>
 *                <p>You are trying to create more than 300 queries.</p>
 *             </li>
 *          </ul>
 *          <p>For <a href="https://docs.aws.amazon.com/config/latest/APIReference/API_DescribeConfigurationRecorders.html">DescribeConfigurationRecorders</a> and <a href="https://docs.aws.amazon.com/config/latest/APIReference/API_DescribeConfigurationRecorderStatus.html">DescribeConfigurationRecorderStatus</a>, one of the following errors:</p>
 *          <ul>
 *             <li>
 *                <p>You have specified more than one configuration recorder.</p>
 *             </li>
 *             <li>
 *                <p>You have provided a service principal for service-linked configuration recorder that is not valid.</p>
 *             </li>
 *          </ul>
 *          <p>For <a href="https://docs.aws.amazon.com/config/latest/APIReference/API_AssociateResourceTypes.html">AssociateResourceTypes</a> and <a href="https://docs.aws.amazon.com/config/latest/APIReference/API_DisassociateResourceTypes.html">DisassociateResourceTypes</a>, one of the following errors:</p>
 *          <ul>
 *             <li>
 *                <p>Your configuraiton recorder has a recording strategy that does not allow the association or disassociation of resource types.</p>
 *             </li>
 *             <li>
 *                <p>One or more of the specified resource types are already associated or disassociated with the configuration recorder.</p>
 *             </li>
 *             <li>
 *                <p>For service-linked configuration recorders, the configuration recorder does not record one or more of the specified resource types.</p>
 *             </li>
 *          </ul>
 *
 * @throws {@link ConfigServiceServiceException}
 * <p>Base exception class for all service exceptions from ConfigService service.</p>
 *
 *
 * @public
 */
export declare class ListConfigurationRecordersCommand extends ListConfigurationRecordersCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: ListConfigurationRecordersRequest;
            output: ListConfigurationRecordersResponse;
        };
        sdk: {
            input: ListConfigurationRecordersCommandInput;
            output: ListConfigurationRecordersCommandOutput;
        };
    };
}
