import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ConfigServiceClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConfigServiceClient";
import { DescribeDeliveryChannelsRequest, DescribeDeliveryChannelsResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeDeliveryChannelsCommand}.
 */
export interface DescribeDeliveryChannelsCommandInput extends DescribeDeliveryChannelsRequest {
}
/**
 * @public
 *
 * The output of {@link DescribeDeliveryChannelsCommand}.
 */
export interface DescribeDeliveryChannelsCommandOutput extends DescribeDeliveryChannelsResponse, __MetadataBearer {
}
/**
 * @public
 * <p>Returns details about the specified delivery channel. If a
 * 			delivery channel is not specified, this action returns the details
 * 			of all delivery channels associated with the account.</p>
 *          <note>
 *             <p>Currently, you can specify only one delivery channel per
 * 				region in your account.</p>
 *          </note>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConfigServiceClient, DescribeDeliveryChannelsCommand } from "@aws-sdk/client-config-service"; // ES Modules import
 * // const { ConfigServiceClient, DescribeDeliveryChannelsCommand } = require("@aws-sdk/client-config-service"); // CommonJS import
 * const client = new ConfigServiceClient(config);
 * const input = { // DescribeDeliveryChannelsRequest
 *   DeliveryChannelNames: [ // DeliveryChannelNameList
 *     "STRING_VALUE",
 *   ],
 * };
 * const command = new DescribeDeliveryChannelsCommand(input);
 * const response = await client.send(command);
 * // { // DescribeDeliveryChannelsResponse
 * //   DeliveryChannels: [ // DeliveryChannelList
 * //     { // DeliveryChannel
 * //       name: "STRING_VALUE",
 * //       s3BucketName: "STRING_VALUE",
 * //       s3KeyPrefix: "STRING_VALUE",
 * //       s3KmsKeyArn: "STRING_VALUE",
 * //       snsTopicARN: "STRING_VALUE",
 * //       configSnapshotDeliveryProperties: { // ConfigSnapshotDeliveryProperties
 * //         deliveryFrequency: "One_Hour" || "Three_Hours" || "Six_Hours" || "Twelve_Hours" || "TwentyFour_Hours",
 * //       },
 * //     },
 * //   ],
 * // };
 *
 * ```
 *
 * @param DescribeDeliveryChannelsCommandInput - {@link DescribeDeliveryChannelsCommandInput}
 * @returns {@link DescribeDeliveryChannelsCommandOutput}
 * @see {@link DescribeDeliveryChannelsCommandInput} for command's `input` shape.
 * @see {@link DescribeDeliveryChannelsCommandOutput} for command's `response` shape.
 * @see {@link ConfigServiceClientResolvedConfig | config} for ConfigServiceClient's `config` shape.
 *
 * @throws {@link NoSuchDeliveryChannelException} (client fault)
 *  <p>You have specified a delivery channel that does not
 * 			exist.</p>
 *
 * @throws {@link ConfigServiceServiceException}
 * <p>Base exception class for all service exceptions from ConfigService service.</p>
 *
 */
export declare class DescribeDeliveryChannelsCommand extends $Command<DescribeDeliveryChannelsCommandInput, DescribeDeliveryChannelsCommandOutput, ConfigServiceClientResolvedConfig> {
    readonly input: DescribeDeliveryChannelsCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: DescribeDeliveryChannelsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConfigServiceClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDeliveryChannelsCommandInput, DescribeDeliveryChannelsCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
