import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { ConfigServiceClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ConfigServiceClient";
import { DescribeDeliveryChannelStatusRequest, DescribeDeliveryChannelStatusResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeDeliveryChannelStatusCommand}.
 */
export interface DescribeDeliveryChannelStatusCommandInput extends DescribeDeliveryChannelStatusRequest {
}
/**
 * @public
 *
 * The output of {@link DescribeDeliveryChannelStatusCommand}.
 */
export interface DescribeDeliveryChannelStatusCommandOutput extends DescribeDeliveryChannelStatusResponse, __MetadataBearer {
}
/**
 * @public
 * <p>Returns the current status of the specified delivery channel.
 * 			If a delivery channel is not specified, this action returns the
 * 			current status of all delivery channels associated with the
 * 			account.</p>
 *          <note>
 *             <p>Currently, you can specify only one delivery channel per
 * 				region in your account.</p>
 *          </note>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ConfigServiceClient, DescribeDeliveryChannelStatusCommand } from "@aws-sdk/client-config-service"; // ES Modules import
 * // const { ConfigServiceClient, DescribeDeliveryChannelStatusCommand } = require("@aws-sdk/client-config-service"); // CommonJS import
 * const client = new ConfigServiceClient(config);
 * const input = { // DescribeDeliveryChannelStatusRequest
 *   DeliveryChannelNames: [ // DeliveryChannelNameList
 *     "STRING_VALUE",
 *   ],
 * };
 * const command = new DescribeDeliveryChannelStatusCommand(input);
 * const response = await client.send(command);
 * // { // DescribeDeliveryChannelStatusResponse
 * //   DeliveryChannelsStatus: [ // DeliveryChannelStatusList
 * //     { // DeliveryChannelStatus
 * //       name: "STRING_VALUE",
 * //       configSnapshotDeliveryInfo: { // ConfigExportDeliveryInfo
 * //         lastStatus: "Success" || "Failure" || "Not_Applicable",
 * //         lastErrorCode: "STRING_VALUE",
 * //         lastErrorMessage: "STRING_VALUE",
 * //         lastAttemptTime: new Date("TIMESTAMP"),
 * //         lastSuccessfulTime: new Date("TIMESTAMP"),
 * //         nextDeliveryTime: new Date("TIMESTAMP"),
 * //       },
 * //       configHistoryDeliveryInfo: {
 * //         lastStatus: "Success" || "Failure" || "Not_Applicable",
 * //         lastErrorCode: "STRING_VALUE",
 * //         lastErrorMessage: "STRING_VALUE",
 * //         lastAttemptTime: new Date("TIMESTAMP"),
 * //         lastSuccessfulTime: new Date("TIMESTAMP"),
 * //         nextDeliveryTime: new Date("TIMESTAMP"),
 * //       },
 * //       configStreamDeliveryInfo: { // ConfigStreamDeliveryInfo
 * //         lastStatus: "Success" || "Failure" || "Not_Applicable",
 * //         lastErrorCode: "STRING_VALUE",
 * //         lastErrorMessage: "STRING_VALUE",
 * //         lastStatusChangeTime: new Date("TIMESTAMP"),
 * //       },
 * //     },
 * //   ],
 * // };
 *
 * ```
 *
 * @param DescribeDeliveryChannelStatusCommandInput - {@link DescribeDeliveryChannelStatusCommandInput}
 * @returns {@link DescribeDeliveryChannelStatusCommandOutput}
 * @see {@link DescribeDeliveryChannelStatusCommandInput} for command's `input` shape.
 * @see {@link DescribeDeliveryChannelStatusCommandOutput} for command's `response` shape.
 * @see {@link ConfigServiceClientResolvedConfig | config} for ConfigServiceClient's `config` shape.
 *
 * @throws {@link NoSuchDeliveryChannelException} (client fault)
 *  <p>You have specified a delivery channel that does not
 * 			exist.</p>
 *
 * @throws {@link ConfigServiceServiceException}
 * <p>Base exception class for all service exceptions from ConfigService service.</p>
 *
 */
export declare class DescribeDeliveryChannelStatusCommand extends $Command<DescribeDeliveryChannelStatusCommandInput, DescribeDeliveryChannelStatusCommandOutput, ConfigServiceClientResolvedConfig> {
    readonly input: DescribeDeliveryChannelStatusCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: DescribeDeliveryChannelStatusCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ConfigServiceClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDeliveryChannelStatusCommandInput, DescribeDeliveryChannelStatusCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
