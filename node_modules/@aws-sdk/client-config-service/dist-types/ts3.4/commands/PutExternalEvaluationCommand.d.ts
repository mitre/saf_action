import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ConfigServiceClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ConfigServiceClient";
import {
  PutExternalEvaluationRequest,
  PutExternalEvaluationResponse,
} from "../models/models_1";
export { __MetadataBearer, $Command };
export interface PutExternalEvaluationCommandInput
  extends PutExternalEvaluationRequest {}
export interface PutExternalEvaluationCommandOutput
  extends PutExternalEvaluationResponse,
    __MetadataBearer {}
export declare class PutExternalEvaluationCommand extends $Command<
  PutExternalEvaluationCommandInput,
  PutExternalEvaluationCommandOutput,
  ConfigServiceClientResolvedConfig
> {
  readonly input: PutExternalEvaluationCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: PutExternalEvaluationCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ConfigServiceClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    PutExternalEvaluationCommandInput,
    PutExternalEvaluationCommandOutput
  >;
  private serialize;
  private deserialize;
}
