import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  ConfigServiceClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ConfigServiceClient";
import {
  PutAggregationAuthorizationRequest,
  PutAggregationAuthorizationResponse,
} from "../models/models_1";
export { __MetadataBearer, $Command };
export interface PutAggregationAuthorizationCommandInput
  extends PutAggregationAuthorizationRequest {}
export interface PutAggregationAuthorizationCommandOutput
  extends PutAggregationAuthorizationResponse,
    __MetadataBearer {}
export declare class PutAggregationAuthorizationCommand extends $Command<
  PutAggregationAuthorizationCommandInput,
  PutAggregationAuthorizationCommandOutput,
  ConfigServiceClientResolvedConfig
> {
  readonly input: PutAggregationAuthorizationCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: PutAggregationAuthorizationCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ConfigServiceClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    PutAggregationAuthorizationCommandInput,
    PutAggregationAuthorizationCommandOutput
  >;
  private serialize;
  private deserialize;
}
