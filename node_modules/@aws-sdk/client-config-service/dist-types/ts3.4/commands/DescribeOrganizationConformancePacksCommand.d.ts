import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ConfigServiceClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ConfigServiceClient";
import {
  DescribeOrganizationConformancePacksRequest,
  DescribeOrganizationConformancePacksResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface DescribeOrganizationConformancePacksCommandInput
  extends DescribeOrganizationConformancePacksRequest {}
export interface DescribeOrganizationConformancePacksCommandOutput
  extends DescribeOrganizationConformancePacksResponse,
    __MetadataBearer {}
export declare class DescribeOrganizationConformancePacksCommand extends $Command<
  DescribeOrganizationConformancePacksCommandInput,
  DescribeOrganizationConformancePacksCommandOutput,
  ConfigServiceClientResolvedConfig
> {
  readonly input: DescribeOrganizationConformancePacksCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeOrganizationConformancePacksCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ConfigServiceClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DescribeOrganizationConformancePacksCommandInput,
    DescribeOrganizationConformancePacksCommandOutput
  >;
  private serialize;
  private deserialize;
}
