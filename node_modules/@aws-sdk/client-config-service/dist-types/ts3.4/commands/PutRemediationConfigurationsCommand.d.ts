import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ConfigServiceClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ConfigServiceClient";
import {
  PutRemediationConfigurationsRequest,
  PutRemediationConfigurationsResponse,
} from "../models/models_1";
export { __MetadataBearer, $Command };
export interface PutRemediationConfigurationsCommandInput
  extends PutRemediationConfigurationsRequest {}
export interface PutRemediationConfigurationsCommandOutput
  extends PutRemediationConfigurationsResponse,
    __MetadataBearer {}
export declare class PutRemediationConfigurationsCommand extends $Command<
  PutRemediationConfigurationsCommandInput,
  PutRemediationConfigurationsCommandOutput,
  ConfigServiceClientResolvedConfig
> {
  readonly input: PutRemediationConfigurationsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: PutRemediationConfigurationsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ConfigServiceClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    PutRemediationConfigurationsCommandInput,
    PutRemediationConfigurationsCommandOutput
  >;
  private serialize;
  private deserialize;
}
