import { ConfigServiceServiceException as __BaseException } from "./ConfigServiceServiceException";
export class MaxNumberOfConfigRulesExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxNumberOfConfigRulesExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxNumberOfConfigRulesExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxNumberOfConfigRulesExceededException.prototype);
    }
}
export class MaxNumberOfConfigurationRecordersExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxNumberOfConfigurationRecordersExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxNumberOfConfigurationRecordersExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxNumberOfConfigurationRecordersExceededException.prototype);
    }
}
export class MaxNumberOfConformancePacksExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxNumberOfConformancePacksExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxNumberOfConformancePacksExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxNumberOfConformancePacksExceededException.prototype);
    }
}
export class MaxNumberOfDeliveryChannelsExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxNumberOfDeliveryChannelsExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxNumberOfDeliveryChannelsExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxNumberOfDeliveryChannelsExceededException.prototype);
    }
}
export class MaxNumberOfOrganizationConfigRulesExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxNumberOfOrganizationConfigRulesExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxNumberOfOrganizationConfigRulesExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxNumberOfOrganizationConfigRulesExceededException.prototype);
    }
}
export class MaxNumberOfOrganizationConformancePacksExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxNumberOfOrganizationConformancePacksExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxNumberOfOrganizationConformancePacksExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxNumberOfOrganizationConformancePacksExceededException.prototype);
    }
}
export class MaxNumberOfRetentionConfigurationsExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaxNumberOfRetentionConfigurationsExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaxNumberOfRetentionConfigurationsExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaxNumberOfRetentionConfigurationsExceededException.prototype);
    }
}
export class NoAvailableDeliveryChannelException extends __BaseException {
    constructor(opts) {
        super({
            name: "NoAvailableDeliveryChannelException",
            $fault: "client",
            ...opts,
        });
        this.name = "NoAvailableDeliveryChannelException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoAvailableDeliveryChannelException.prototype);
    }
}
export class NoAvailableOrganizationException extends __BaseException {
    constructor(opts) {
        super({
            name: "NoAvailableOrganizationException",
            $fault: "client",
            ...opts,
        });
        this.name = "NoAvailableOrganizationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoAvailableOrganizationException.prototype);
    }
}
export class NoSuchBucketException extends __BaseException {
    constructor(opts) {
        super({
            name: "NoSuchBucketException",
            $fault: "client",
            ...opts,
        });
        this.name = "NoSuchBucketException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoSuchBucketException.prototype);
    }
}
export class OrganizationAllFeaturesNotEnabledException extends __BaseException {
    constructor(opts) {
        super({
            name: "OrganizationAllFeaturesNotEnabledException",
            $fault: "client",
            ...opts,
        });
        this.name = "OrganizationAllFeaturesNotEnabledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OrganizationAllFeaturesNotEnabledException.prototype);
    }
}
export class OrganizationConformancePackTemplateValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "OrganizationConformancePackTemplateValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "OrganizationConformancePackTemplateValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OrganizationConformancePackTemplateValidationException.prototype);
    }
}
export class ResourceConcurrentModificationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceConcurrentModificationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceConcurrentModificationException.prototype);
    }
}
export class TooManyTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
    }
}
