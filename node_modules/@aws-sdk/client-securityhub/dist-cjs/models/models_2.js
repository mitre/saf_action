"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceInUseException = exports.RegionAvailabilityStatus = exports.SortOrder = exports.FindingHistoryUpdateSourceType = exports.IntegrationType = exports.OrganizationConfigurationStatus = exports.OrganizationConfigurationConfigurationType = exports.SecurityControlProperty = exports.Policy = exports.ResourceConflictException = exports.ControlFindingGenerator = exports.ConfigurationOptions = exports.UnprocessedErrorCode = exports.UpdateStatus = exports.SeverityRating = exports.ControlStatus = exports.ParameterValueType = exports.ParameterValue = exports.TargetType = exports.Target = exports.StatusReasonCode = exports.StandardsStatus = exports.WorkflowState = exports.VulnerabilityFixAvailable = exports.VulnerabilityExploitAvailable = exports.ThreatIntelIndicatorType = exports.ThreatIntelIndicatorCategory = exports.Partition = void 0;
const SecurityHubServiceException_1 = require("./SecurityHubServiceException");
exports.Partition = {
    AWS: "aws",
    AWS_CN: "aws-cn",
    AWS_US_GOV: "aws-us-gov",
};
exports.ThreatIntelIndicatorCategory = {
    BACKDOOR: "BACKDOOR",
    CARD_STEALER: "CARD_STEALER",
    COMMAND_AND_CONTROL: "COMMAND_AND_CONTROL",
    DROP_SITE: "DROP_SITE",
    EXPLOIT_SITE: "EXPLOIT_SITE",
    KEYLOGGER: "KEYLOGGER",
};
exports.ThreatIntelIndicatorType = {
    DOMAIN: "DOMAIN",
    EMAIL_ADDRESS: "EMAIL_ADDRESS",
    HASH_MD5: "HASH_MD5",
    HASH_SHA1: "HASH_SHA1",
    HASH_SHA256: "HASH_SHA256",
    HASH_SHA512: "HASH_SHA512",
    IPV4_ADDRESS: "IPV4_ADDRESS",
    IPV6_ADDRESS: "IPV6_ADDRESS",
    MUTEX: "MUTEX",
    PROCESS: "PROCESS",
    URL: "URL",
};
exports.VulnerabilityExploitAvailable = {
    NO: "NO",
    YES: "YES",
};
exports.VulnerabilityFixAvailable = {
    NO: "NO",
    PARTIAL: "PARTIAL",
    YES: "YES",
};
exports.WorkflowState = {
    ASSIGNED: "ASSIGNED",
    DEFERRED: "DEFERRED",
    IN_PROGRESS: "IN_PROGRESS",
    NEW: "NEW",
    RESOLVED: "RESOLVED",
};
exports.StandardsStatus = {
    DELETING: "DELETING",
    FAILED: "FAILED",
    INCOMPLETE: "INCOMPLETE",
    PENDING: "PENDING",
    READY: "READY",
};
exports.StatusReasonCode = {
    INTERNAL_ERROR: "INTERNAL_ERROR",
    NO_AVAILABLE_CONFIGURATION_RECORDER: "NO_AVAILABLE_CONFIGURATION_RECORDER",
};
var Target;
(function (Target) {
    Target.visit = (value, visitor) => {
        if (value.AccountId !== undefined)
            return visitor.AccountId(value.AccountId);
        if (value.OrganizationalUnitId !== undefined)
            return visitor.OrganizationalUnitId(value.OrganizationalUnitId);
        if (value.RootId !== undefined)
            return visitor.RootId(value.RootId);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Target = exports.Target || (exports.Target = {}));
exports.TargetType = {
    ACCOUNT: "ACCOUNT",
    ORGANIZATIONAL_UNIT: "ORGANIZATIONAL_UNIT",
};
var ParameterValue;
(function (ParameterValue) {
    ParameterValue.visit = (value, visitor) => {
        if (value.Integer !== undefined)
            return visitor.Integer(value.Integer);
        if (value.IntegerList !== undefined)
            return visitor.IntegerList(value.IntegerList);
        if (value.Double !== undefined)
            return visitor.Double(value.Double);
        if (value.String !== undefined)
            return visitor.String(value.String);
        if (value.StringList !== undefined)
            return visitor.StringList(value.StringList);
        if (value.Boolean !== undefined)
            return visitor.Boolean(value.Boolean);
        if (value.Enum !== undefined)
            return visitor.Enum(value.Enum);
        if (value.EnumList !== undefined)
            return visitor.EnumList(value.EnumList);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ParameterValue = exports.ParameterValue || (exports.ParameterValue = {}));
exports.ParameterValueType = {
    CUSTOM: "CUSTOM",
    DEFAULT: "DEFAULT",
};
exports.ControlStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
exports.SeverityRating = {
    CRITICAL: "CRITICAL",
    HIGH: "HIGH",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
};
exports.UpdateStatus = {
    READY: "READY",
    UPDATING: "UPDATING",
};
exports.UnprocessedErrorCode = {
    ACCESS_DENIED: "ACCESS_DENIED",
    INVALID_INPUT: "INVALID_INPUT",
    LIMIT_EXCEEDED: "LIMIT_EXCEEDED",
    NOT_FOUND: "NOT_FOUND",
};
var ConfigurationOptions;
(function (ConfigurationOptions) {
    ConfigurationOptions.visit = (value, visitor) => {
        if (value.Integer !== undefined)
            return visitor.Integer(value.Integer);
        if (value.IntegerList !== undefined)
            return visitor.IntegerList(value.IntegerList);
        if (value.Double !== undefined)
            return visitor.Double(value.Double);
        if (value.String !== undefined)
            return visitor.String(value.String);
        if (value.StringList !== undefined)
            return visitor.StringList(value.StringList);
        if (value.Boolean !== undefined)
            return visitor.Boolean(value.Boolean);
        if (value.Enum !== undefined)
            return visitor.Enum(value.Enum);
        if (value.EnumList !== undefined)
            return visitor.EnumList(value.EnumList);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ConfigurationOptions = exports.ConfigurationOptions || (exports.ConfigurationOptions = {}));
exports.ControlFindingGenerator = {
    SECURITY_CONTROL: "SECURITY_CONTROL",
    STANDARD_CONTROL: "STANDARD_CONTROL",
};
class ResourceConflictException extends SecurityHubServiceException_1.SecurityHubServiceException {
    constructor(opts) {
        super({
            name: "ResourceConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceConflictException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
    }
}
exports.ResourceConflictException = ResourceConflictException;
var Policy;
(function (Policy) {
    Policy.visit = (value, visitor) => {
        if (value.SecurityHub !== undefined)
            return visitor.SecurityHub(value.SecurityHub);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Policy = exports.Policy || (exports.Policy = {}));
exports.SecurityControlProperty = {
    Parameters: "Parameters",
};
exports.OrganizationConfigurationConfigurationType = {
    CENTRAL: "CENTRAL",
    LOCAL: "LOCAL",
};
exports.OrganizationConfigurationStatus = {
    ENABLED: "ENABLED",
    FAILED: "FAILED",
    PENDING: "PENDING",
};
exports.IntegrationType = {
    RECEIVE_FINDINGS_FROM_SECURITY_HUB: "RECEIVE_FINDINGS_FROM_SECURITY_HUB",
    SEND_FINDINGS_TO_SECURITY_HUB: "SEND_FINDINGS_TO_SECURITY_HUB",
    UPDATE_FINDINGS_IN_SECURITY_HUB: "UPDATE_FINDINGS_IN_SECURITY_HUB",
};
exports.FindingHistoryUpdateSourceType = {
    BATCH_IMPORT_FINDINGS: "BATCH_IMPORT_FINDINGS",
    BATCH_UPDATE_FINDINGS: "BATCH_UPDATE_FINDINGS",
};
exports.SortOrder = {
    ASCENDING: "asc",
    DESCENDING: "desc",
};
exports.RegionAvailabilityStatus = {
    AVAILABLE: "AVAILABLE",
    UNAVAILABLE: "UNAVAILABLE",
};
class ResourceInUseException extends SecurityHubServiceException_1.SecurityHubServiceException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
    }
}
exports.ResourceInUseException = ResourceInUseException;
