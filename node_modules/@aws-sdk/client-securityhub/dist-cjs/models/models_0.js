"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuleStatus = exports.MapFilterComparison = exports.DateRangeUnit = exports.StringFilterComparison = exports.AutoEnableStandards = exports.AssociationStatus = exports.AssociationType = exports.ConfigurationPolicyAssociationStatus = exports.AdminStatus = exports.AutomationRulesActionType = exports.WorkflowStatus = exports.VerificationState = exports.SeverityLabel = exports.AccessDeniedException = exports.ResourceNotFoundException = exports.LimitExceededException = exports.InvalidInputException = exports.InvalidAccessException = exports.InternalException = void 0;
const SecurityHubServiceException_1 = require("./SecurityHubServiceException");
class InternalException extends SecurityHubServiceException_1.SecurityHubServiceException {
    constructor(opts) {
        super({
            name: "InternalException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
    }
}
exports.InternalException = InternalException;
class InvalidAccessException extends SecurityHubServiceException_1.SecurityHubServiceException {
    constructor(opts) {
        super({
            name: "InvalidAccessException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidAccessException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidAccessException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
    }
}
exports.InvalidAccessException = InvalidAccessException;
class InvalidInputException extends SecurityHubServiceException_1.SecurityHubServiceException {
    constructor(opts) {
        super({
            name: "InvalidInputException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidInputException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidInputException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
    }
}
exports.InvalidInputException = InvalidInputException;
class LimitExceededException extends SecurityHubServiceException_1.SecurityHubServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
    }
}
exports.LimitExceededException = LimitExceededException;
class ResourceNotFoundException extends SecurityHubServiceException_1.SecurityHubServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
class AccessDeniedException extends SecurityHubServiceException_1.SecurityHubServiceException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
        this.Code = opts.Code;
    }
}
exports.AccessDeniedException = AccessDeniedException;
exports.SeverityLabel = {
    CRITICAL: "CRITICAL",
    HIGH: "HIGH",
    INFORMATIONAL: "INFORMATIONAL",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
};
exports.VerificationState = {
    BENIGN_POSITIVE: "BENIGN_POSITIVE",
    FALSE_POSITIVE: "FALSE_POSITIVE",
    TRUE_POSITIVE: "TRUE_POSITIVE",
    UNKNOWN: "UNKNOWN",
};
exports.WorkflowStatus = {
    NEW: "NEW",
    NOTIFIED: "NOTIFIED",
    RESOLVED: "RESOLVED",
    SUPPRESSED: "SUPPRESSED",
};
exports.AutomationRulesActionType = {
    FINDING_FIELDS_UPDATE: "FINDING_FIELDS_UPDATE",
};
exports.AdminStatus = {
    DISABLE_IN_PROGRESS: "DISABLE_IN_PROGRESS",
    ENABLED: "ENABLED",
};
exports.ConfigurationPolicyAssociationStatus = {
    FAILED: "FAILED",
    PENDING: "PENDING",
    SUCCESS: "SUCCESS",
};
exports.AssociationType = {
    APPLIED: "APPLIED",
    INHERITED: "INHERITED",
};
exports.AssociationStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
exports.AutoEnableStandards = {
    DEFAULT: "DEFAULT",
    NONE: "NONE",
};
exports.StringFilterComparison = {
    CONTAINS: "CONTAINS",
    EQUALS: "EQUALS",
    NOT_CONTAINS: "NOT_CONTAINS",
    NOT_EQUALS: "NOT_EQUALS",
    PREFIX: "PREFIX",
    PREFIX_NOT_EQUALS: "PREFIX_NOT_EQUALS",
};
exports.DateRangeUnit = {
    DAYS: "DAYS",
};
exports.MapFilterComparison = {
    CONTAINS: "CONTAINS",
    EQUALS: "EQUALS",
    NOT_CONTAINS: "NOT_CONTAINS",
    NOT_EQUALS: "NOT_EQUALS",
};
exports.RuleStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
