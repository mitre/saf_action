import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import {
  AccountDetails,
  Action,
  ActionTarget,
  Adjustment,
  AdminAccount,
  AssociationFilters,
  AssociationStatus,
  AssociationType,
  AutoEnableStandards,
  AutomationRulesAction,
  AutomationRulesConfig,
  AutomationRulesFindingFilters,
  AutomationRulesMetadata,
  AwsAmazonMqBrokerDetails,
  AwsApiGatewayRestApiDetails,
  AwsApiGatewayStageDetails,
  AwsApiGatewayV2ApiDetails,
  AwsApiGatewayV2StageDetails,
  AwsAppSyncGraphQlApiDetails,
  AwsAthenaWorkGroupDetails,
  AwsAutoScalingAutoScalingGroupDetails,
  AwsAutoScalingLaunchConfigurationDetails,
  AwsBackupBackupPlanDetails,
  AwsBackupBackupVaultDetails,
  AwsBackupRecoveryPointDetails,
  AwsCertificateManagerCertificateDetails,
  AwsCloudFormationStackDetails,
  AwsCloudFrontDistributionDetails,
  AwsCloudTrailTrailDetails,
  AwsCloudWatchAlarmDetails,
  AwsCodeBuildProjectDetails,
  AwsDmsEndpointDetails,
  AwsDmsReplicationInstanceDetails,
  AwsDmsReplicationTaskDetails,
  AwsDynamoDbTableDetails,
  AwsEc2ClientVpnEndpointDetails,
  AwsEc2EipDetails,
  AwsEc2InstanceDetails,
  AwsEc2LaunchTemplateDetails,
  AwsEc2NetworkAclDetails,
  AwsEc2NetworkInterfaceDetails,
  AwsEc2RouteTableDetails,
  AwsEc2SecurityGroupDetails,
  AwsEc2SubnetDetails,
  AwsEc2TransitGatewayDetails,
  AwsEc2VolumeDetails,
  AwsEc2VpcDetails,
  AwsEc2VpcEndpointServiceDetails,
  AwsEc2VpcPeeringConnectionDetails,
  AwsEc2VpnConnectionDetails,
  AwsEcrContainerImageDetails,
  AwsEcrRepositoryDetails,
  AwsEcsClusterDetails,
  AwsEcsContainerDetails,
  AwsEcsServiceDetails,
  ConfigurationPolicyAssociationStatus,
  DateFilter,
  MapFilter,
  NoteUpdate,
  NumberFilter,
  RelatedFinding,
  RuleStatus,
  SeverityLabel,
  SeverityUpdate,
  StringFilter,
  VerificationState,
  WorkflowStatus,
  WorkflowUpdate,
} from "./models_0";
import {
  AwsEcsTaskDefinitionDetails,
  AwsEcsTaskDetails,
  AwsEfsAccessPointDetails,
  AwsEksClusterDetails,
  AwsElasticBeanstalkEnvironmentDetails,
  AwsElasticsearchDomainDetails,
  AwsElbLoadBalancerDetails,
  AwsElbv2LoadBalancerDetails,
  AwsEventSchemasRegistryDetails,
  AwsEventsEndpointDetails,
  AwsEventsEventbusDetails,
  AwsGuardDutyDetectorDetails,
  AwsIamAccessKeyDetails,
  AwsIamGroupDetails,
  AwsIamPolicyDetails,
  AwsIamRoleDetails,
  AwsIamUserDetails,
  AwsKinesisStreamDetails,
  AwsKmsKeyDetails,
  AwsLambdaFunctionDetails,
  AwsLambdaLayerVersionDetails,
  AwsMskClusterDetails,
  AwsNetworkFirewallFirewallDetails,
  AwsNetworkFirewallFirewallPolicyDetails,
  AwsNetworkFirewallRuleGroupDetails,
  AwsOpenSearchServiceDomainDetails,
  AwsRdsDbClusterDetails,
  AwsRdsDbClusterSnapshotDetails,
  AwsRdsDbInstanceDetails,
  AwsRdsDbSecurityGroupDetails,
  AwsRdsDbSnapshotDetails,
  AwsRdsEventSubscriptionDetails,
  AwsRedshiftClusterDetails,
  AwsRoute53HostedZoneDetails,
  AwsS3AccessPointDetails,
  AwsS3AccountPublicAccessBlockDetails,
  AwsS3BucketDetails,
  AwsS3ObjectDetails,
  AwsSageMakerNotebookInstanceDetails,
  AwsSecretsManagerSecretDetails,
  AwsSnsTopicDetails,
  AwsSqsQueueDetails,
  AwsSsmPatchComplianceDetails,
  AwsStepFunctionStateMachineDetails,
  AwsWafRateBasedRuleDetails,
  AwsWafRegionalRateBasedRuleDetails,
  AwsWafRegionalRuleDetails,
  AwsWafRegionalRuleGroupDetails,
  AwsWafRegionalWebAclRulesListActionDetails,
  AwsWafRegionalWebAclRulesListOverrideActionDetails,
  Compliance,
  DataClassificationDetails,
  FindingProviderFields,
  GeneratorDetails,
  Malware,
  Network,
  NetworkPathComponent,
  Note,
  PatchSummary,
  ProcessDetails,
  RecordState,
  Remediation,
} from "./models_1";
import { SecurityHubServiceException as __BaseException } from "./SecurityHubServiceException";
export interface AwsWafRegionalWebAclRulesListDetails {
  Action?: AwsWafRegionalWebAclRulesListActionDetails;
  OverrideAction?: AwsWafRegionalWebAclRulesListOverrideActionDetails;
  Priority?: number;
  RuleId?: string;
  Type?: string;
}
export interface AwsWafRegionalWebAclDetails {
  DefaultAction?: string;
  MetricName?: string;
  Name?: string;
  RulesList?: AwsWafRegionalWebAclRulesListDetails[];
  WebAclId?: string;
}
export interface AwsWafRulePredicateListDetails {
  DataId?: string;
  Negated?: boolean;
  Type?: string;
}
export interface AwsWafRuleDetails {
  MetricName?: string;
  Name?: string;
  PredicateList?: AwsWafRulePredicateListDetails[];
  RuleId?: string;
}
export interface AwsWafRuleGroupRulesActionDetails {
  Type?: string;
}
export interface AwsWafRuleGroupRulesDetails {
  Action?: AwsWafRuleGroupRulesActionDetails;
  Priority?: number;
  RuleId?: string;
  Type?: string;
}
export interface AwsWafRuleGroupDetails {
  MetricName?: string;
  Name?: string;
  RuleGroupId?: string;
  Rules?: AwsWafRuleGroupRulesDetails[];
}
export interface AwsWafv2CustomHttpHeader {
  Name?: string;
  Value?: string;
}
export interface AwsWafv2CustomRequestHandlingDetails {
  InsertHeaders?: AwsWafv2CustomHttpHeader[];
}
export interface AwsWafv2ActionAllowDetails {
  CustomRequestHandling?: AwsWafv2CustomRequestHandlingDetails;
}
export interface AwsWafv2CustomResponseDetails {
  CustomResponseBodyKey?: string;
  ResponseCode?: number;
  ResponseHeaders?: AwsWafv2CustomHttpHeader[];
}
export interface AwsWafv2ActionBlockDetails {
  CustomResponse?: AwsWafv2CustomResponseDetails;
}
export interface AwsWafv2RulesActionCaptchaDetails {
  CustomRequestHandling?: AwsWafv2CustomRequestHandlingDetails;
}
export interface AwsWafv2RulesActionCountDetails {
  CustomRequestHandling?: AwsWafv2CustomRequestHandlingDetails;
}
export interface AwsWafv2RulesActionDetails {
  Allow?: AwsWafv2ActionAllowDetails;
  Block?: AwsWafv2ActionBlockDetails;
  Captcha?: AwsWafv2RulesActionCaptchaDetails;
  Count?: AwsWafv2RulesActionCountDetails;
}
export interface AwsWafv2VisibilityConfigDetails {
  CloudWatchMetricsEnabled?: boolean;
  MetricName?: string;
  SampledRequestsEnabled?: boolean;
}
export interface AwsWafv2RulesDetails {
  Action?: AwsWafv2RulesActionDetails;
  Name?: string;
  OverrideAction?: string;
  Priority?: number;
  VisibilityConfig?: AwsWafv2VisibilityConfigDetails;
}
export interface AwsWafv2RuleGroupDetails {
  Capacity?: number;
  Description?: string;
  Id?: string;
  Name?: string;
  Arn?: string;
  Rules?: AwsWafv2RulesDetails[];
  Scope?: string;
  VisibilityConfig?: AwsWafv2VisibilityConfigDetails;
}
export interface AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails {
  ImmunityTime?: number;
}
export interface AwsWafv2WebAclCaptchaConfigDetails {
  ImmunityTimeProperty?: AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails;
}
export interface AwsWafv2WebAclActionDetails {
  Allow?: AwsWafv2ActionAllowDetails;
  Block?: AwsWafv2ActionBlockDetails;
}
export interface AwsWafv2WebAclDetails {
  Name?: string;
  Arn?: string;
  ManagedbyFirewallManager?: boolean;
  Id?: string;
  Capacity?: number;
  CaptchaConfig?: AwsWafv2WebAclCaptchaConfigDetails;
  DefaultAction?: AwsWafv2WebAclActionDetails;
  Description?: string;
  Rules?: AwsWafv2RulesDetails[];
  VisibilityConfig?: AwsWafv2VisibilityConfigDetails;
}
export interface WafAction {
  Type?: string;
}
export interface WafExcludedRule {
  RuleId?: string;
}
export interface WafOverrideAction {
  Type?: string;
}
export interface AwsWafWebAclRule {
  Action?: WafAction;
  ExcludedRules?: WafExcludedRule[];
  OverrideAction?: WafOverrideAction;
  Priority?: number;
  RuleId?: string;
  Type?: string;
}
export interface AwsWafWebAclDetails {
  Name?: string;
  DefaultAction?: string;
  Rules?: AwsWafWebAclRule[];
  WebAclId?: string;
}
export interface AwsXrayEncryptionConfigDetails {
  KeyId?: string;
  Status?: string;
  Type?: string;
}
export interface VolumeMount {
  Name?: string;
  MountPath?: string;
}
export interface ContainerDetails {
  ContainerRuntime?: string;
  Name?: string;
  ImageId?: string;
  ImageName?: string;
  LaunchedAt?: string;
  VolumeMounts?: VolumeMount[];
  Privileged?: boolean;
}
export interface ResourceDetails {
  AwsAutoScalingAutoScalingGroup?: AwsAutoScalingAutoScalingGroupDetails;
  AwsCodeBuildProject?: AwsCodeBuildProjectDetails;
  AwsCloudFrontDistribution?: AwsCloudFrontDistributionDetails;
  AwsEc2Instance?: AwsEc2InstanceDetails;
  AwsEc2NetworkInterface?: AwsEc2NetworkInterfaceDetails;
  AwsEc2SecurityGroup?: AwsEc2SecurityGroupDetails;
  AwsEc2Volume?: AwsEc2VolumeDetails;
  AwsEc2Vpc?: AwsEc2VpcDetails;
  AwsEc2Eip?: AwsEc2EipDetails;
  AwsEc2Subnet?: AwsEc2SubnetDetails;
  AwsEc2NetworkAcl?: AwsEc2NetworkAclDetails;
  AwsElbv2LoadBalancer?: AwsElbv2LoadBalancerDetails;
  AwsElasticBeanstalkEnvironment?: AwsElasticBeanstalkEnvironmentDetails;
  AwsElasticsearchDomain?: AwsElasticsearchDomainDetails;
  AwsS3Bucket?: AwsS3BucketDetails;
  AwsS3AccountPublicAccessBlock?: AwsS3AccountPublicAccessBlockDetails;
  AwsS3Object?: AwsS3ObjectDetails;
  AwsSecretsManagerSecret?: AwsSecretsManagerSecretDetails;
  AwsIamAccessKey?: AwsIamAccessKeyDetails;
  AwsIamUser?: AwsIamUserDetails;
  AwsIamPolicy?: AwsIamPolicyDetails;
  AwsApiGatewayV2Stage?: AwsApiGatewayV2StageDetails;
  AwsApiGatewayV2Api?: AwsApiGatewayV2ApiDetails;
  AwsDynamoDbTable?: AwsDynamoDbTableDetails;
  AwsApiGatewayStage?: AwsApiGatewayStageDetails;
  AwsApiGatewayRestApi?: AwsApiGatewayRestApiDetails;
  AwsCloudTrailTrail?: AwsCloudTrailTrailDetails;
  AwsSsmPatchCompliance?: AwsSsmPatchComplianceDetails;
  AwsCertificateManagerCertificate?: AwsCertificateManagerCertificateDetails;
  AwsRedshiftCluster?: AwsRedshiftClusterDetails;
  AwsElbLoadBalancer?: AwsElbLoadBalancerDetails;
  AwsIamGroup?: AwsIamGroupDetails;
  AwsIamRole?: AwsIamRoleDetails;
  AwsKmsKey?: AwsKmsKeyDetails;
  AwsLambdaFunction?: AwsLambdaFunctionDetails;
  AwsLambdaLayerVersion?: AwsLambdaLayerVersionDetails;
  AwsRdsDbInstance?: AwsRdsDbInstanceDetails;
  AwsSnsTopic?: AwsSnsTopicDetails;
  AwsSqsQueue?: AwsSqsQueueDetails;
  AwsWafWebAcl?: AwsWafWebAclDetails;
  AwsRdsDbSnapshot?: AwsRdsDbSnapshotDetails;
  AwsRdsDbClusterSnapshot?: AwsRdsDbClusterSnapshotDetails;
  AwsRdsDbCluster?: AwsRdsDbClusterDetails;
  AwsEcsCluster?: AwsEcsClusterDetails;
  AwsEcsContainer?: AwsEcsContainerDetails;
  AwsEcsTaskDefinition?: AwsEcsTaskDefinitionDetails;
  Container?: ContainerDetails;
  Other?: Record<string, string>;
  AwsRdsEventSubscription?: AwsRdsEventSubscriptionDetails;
  AwsEcsService?: AwsEcsServiceDetails;
  AwsAutoScalingLaunchConfiguration?: AwsAutoScalingLaunchConfigurationDetails;
  AwsEc2VpnConnection?: AwsEc2VpnConnectionDetails;
  AwsEcrContainerImage?: AwsEcrContainerImageDetails;
  AwsOpenSearchServiceDomain?: AwsOpenSearchServiceDomainDetails;
  AwsEc2VpcEndpointService?: AwsEc2VpcEndpointServiceDetails;
  AwsXrayEncryptionConfig?: AwsXrayEncryptionConfigDetails;
  AwsWafRateBasedRule?: AwsWafRateBasedRuleDetails;
  AwsWafRegionalRateBasedRule?: AwsWafRegionalRateBasedRuleDetails;
  AwsEcrRepository?: AwsEcrRepositoryDetails;
  AwsEksCluster?: AwsEksClusterDetails;
  AwsNetworkFirewallFirewallPolicy?: AwsNetworkFirewallFirewallPolicyDetails;
  AwsNetworkFirewallFirewall?: AwsNetworkFirewallFirewallDetails;
  AwsNetworkFirewallRuleGroup?: AwsNetworkFirewallRuleGroupDetails;
  AwsRdsDbSecurityGroup?: AwsRdsDbSecurityGroupDetails;
  AwsKinesisStream?: AwsKinesisStreamDetails;
  AwsEc2TransitGateway?: AwsEc2TransitGatewayDetails;
  AwsEfsAccessPoint?: AwsEfsAccessPointDetails;
  AwsCloudFormationStack?: AwsCloudFormationStackDetails;
  AwsCloudWatchAlarm?: AwsCloudWatchAlarmDetails;
  AwsEc2VpcPeeringConnection?: AwsEc2VpcPeeringConnectionDetails;
  AwsWafRegionalRuleGroup?: AwsWafRegionalRuleGroupDetails;
  AwsWafRegionalRule?: AwsWafRegionalRuleDetails;
  AwsWafRegionalWebAcl?: AwsWafRegionalWebAclDetails;
  AwsWafRule?: AwsWafRuleDetails;
  AwsWafRuleGroup?: AwsWafRuleGroupDetails;
  AwsEcsTask?: AwsEcsTaskDetails;
  AwsBackupBackupVault?: AwsBackupBackupVaultDetails;
  AwsBackupBackupPlan?: AwsBackupBackupPlanDetails;
  AwsBackupRecoveryPoint?: AwsBackupRecoveryPointDetails;
  AwsEc2LaunchTemplate?: AwsEc2LaunchTemplateDetails;
  AwsSageMakerNotebookInstance?: AwsSageMakerNotebookInstanceDetails;
  AwsWafv2WebAcl?: AwsWafv2WebAclDetails;
  AwsWafv2RuleGroup?: AwsWafv2RuleGroupDetails;
  AwsEc2RouteTable?: AwsEc2RouteTableDetails;
  AwsAmazonMqBroker?: AwsAmazonMqBrokerDetails;
  AwsAppSyncGraphQlApi?: AwsAppSyncGraphQlApiDetails;
  AwsEventSchemasRegistry?: AwsEventSchemasRegistryDetails;
  AwsGuardDutyDetector?: AwsGuardDutyDetectorDetails;
  AwsStepFunctionStateMachine?: AwsStepFunctionStateMachineDetails;
  AwsAthenaWorkGroup?: AwsAthenaWorkGroupDetails;
  AwsEventsEventbus?: AwsEventsEventbusDetails;
  AwsDmsEndpoint?: AwsDmsEndpointDetails;
  AwsEventsEndpoint?: AwsEventsEndpointDetails;
  AwsDmsReplicationTask?: AwsDmsReplicationTaskDetails;
  AwsDmsReplicationInstance?: AwsDmsReplicationInstanceDetails;
  AwsRoute53HostedZone?: AwsRoute53HostedZoneDetails;
  AwsMskCluster?: AwsMskClusterDetails;
  AwsS3AccessPoint?: AwsS3AccessPointDetails;
  AwsEc2ClientVpnEndpoint?: AwsEc2ClientVpnEndpointDetails;
}
export declare const Partition: {
  readonly AWS: "aws";
  readonly AWS_CN: "aws-cn";
  readonly AWS_US_GOV: "aws-us-gov";
};
export type Partition = (typeof Partition)[keyof typeof Partition];
export interface Resource {
  Type: string | undefined;
  Id: string | undefined;
  Partition?: Partition;
  Region?: string;
  ResourceRole?: string;
  Tags?: Record<string, string>;
  DataClassification?: DataClassificationDetails;
  Details?: ResourceDetails;
  ApplicationName?: string;
  ApplicationArn?: string;
}
export interface Severity {
  Product?: number;
  Label?: SeverityLabel;
  Normalized?: number;
  Original?: string;
}
export declare const ThreatIntelIndicatorCategory: {
  readonly BACKDOOR: "BACKDOOR";
  readonly CARD_STEALER: "CARD_STEALER";
  readonly COMMAND_AND_CONTROL: "COMMAND_AND_CONTROL";
  readonly DROP_SITE: "DROP_SITE";
  readonly EXPLOIT_SITE: "EXPLOIT_SITE";
  readonly KEYLOGGER: "KEYLOGGER";
};
export type ThreatIntelIndicatorCategory =
  (typeof ThreatIntelIndicatorCategory)[keyof typeof ThreatIntelIndicatorCategory];
export declare const ThreatIntelIndicatorType: {
  readonly DOMAIN: "DOMAIN";
  readonly EMAIL_ADDRESS: "EMAIL_ADDRESS";
  readonly HASH_MD5: "HASH_MD5";
  readonly HASH_SHA1: "HASH_SHA1";
  readonly HASH_SHA256: "HASH_SHA256";
  readonly HASH_SHA512: "HASH_SHA512";
  readonly IPV4_ADDRESS: "IPV4_ADDRESS";
  readonly IPV6_ADDRESS: "IPV6_ADDRESS";
  readonly MUTEX: "MUTEX";
  readonly PROCESS: "PROCESS";
  readonly URL: "URL";
};
export type ThreatIntelIndicatorType =
  (typeof ThreatIntelIndicatorType)[keyof typeof ThreatIntelIndicatorType];
export interface ThreatIntelIndicator {
  Type?: ThreatIntelIndicatorType;
  Value?: string;
  Category?: ThreatIntelIndicatorCategory;
  LastObservedAt?: string;
  Source?: string;
  SourceUrl?: string;
}
export interface FilePaths {
  FilePath?: string;
  FileName?: string;
  ResourceId?: string;
  Hash?: string;
}
export interface Threat {
  Name?: string;
  Severity?: string;
  ItemCount?: number;
  FilePaths?: FilePaths[];
}
export interface CodeVulnerabilitiesFilePath {
  EndLine?: number;
  FileName?: string;
  FilePath?: string;
  StartLine?: number;
}
export interface VulnerabilityCodeVulnerabilities {
  Cwes?: string[];
  FilePath?: CodeVulnerabilitiesFilePath;
  SourceArn?: string;
}
export interface Cvss {
  Version?: string;
  BaseScore?: number;
  BaseVector?: string;
  Source?: string;
  Adjustments?: Adjustment[];
}
export declare const VulnerabilityExploitAvailable: {
  readonly NO: "NO";
  readonly YES: "YES";
};
export type VulnerabilityExploitAvailable =
  (typeof VulnerabilityExploitAvailable)[keyof typeof VulnerabilityExploitAvailable];
export declare const VulnerabilityFixAvailable: {
  readonly NO: "NO";
  readonly PARTIAL: "PARTIAL";
  readonly YES: "YES";
};
export type VulnerabilityFixAvailable =
  (typeof VulnerabilityFixAvailable)[keyof typeof VulnerabilityFixAvailable];
export interface VulnerabilityVendor {
  Name: string | undefined;
  Url?: string;
  VendorSeverity?: string;
  VendorCreatedAt?: string;
  VendorUpdatedAt?: string;
}
export interface SoftwarePackage {
  Name?: string;
  Version?: string;
  Epoch?: string;
  Release?: string;
  Architecture?: string;
  PackageManager?: string;
  FilePath?: string;
  FixedInVersion?: string;
  Remediation?: string;
  SourceLayerHash?: string;
  SourceLayerArn?: string;
}
export interface Vulnerability {
  Id: string | undefined;
  VulnerablePackages?: SoftwarePackage[];
  Cvss?: Cvss[];
  RelatedVulnerabilities?: string[];
  Vendor?: VulnerabilityVendor;
  ReferenceUrls?: string[];
  FixAvailable?: VulnerabilityFixAvailable;
  EpssScore?: number;
  ExploitAvailable?: VulnerabilityExploitAvailable;
  LastKnownExploitAt?: string;
  CodeVulnerabilities?: VulnerabilityCodeVulnerabilities[];
}
export interface Workflow {
  Status?: WorkflowStatus;
}
export declare const WorkflowState: {
  readonly ASSIGNED: "ASSIGNED";
  readonly DEFERRED: "DEFERRED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly NEW: "NEW";
  readonly RESOLVED: "RESOLVED";
};
export type WorkflowState = (typeof WorkflowState)[keyof typeof WorkflowState];
export interface AwsSecurityFinding {
  SchemaVersion: string | undefined;
  Id: string | undefined;
  ProductArn: string | undefined;
  ProductName?: string;
  CompanyName?: string;
  Region?: string;
  GeneratorId: string | undefined;
  AwsAccountId: string | undefined;
  Types?: string[];
  FirstObservedAt?: string;
  LastObservedAt?: string;
  CreatedAt: string | undefined;
  UpdatedAt: string | undefined;
  Severity?: Severity;
  Confidence?: number;
  Criticality?: number;
  Title: string | undefined;
  Description: string | undefined;
  Remediation?: Remediation;
  SourceUrl?: string;
  ProductFields?: Record<string, string>;
  UserDefinedFields?: Record<string, string>;
  Malware?: Malware[];
  Network?: Network;
  NetworkPath?: NetworkPathComponent[];
  Process?: ProcessDetails;
  Threats?: Threat[];
  ThreatIntelIndicators?: ThreatIntelIndicator[];
  Resources: Resource[] | undefined;
  Compliance?: Compliance;
  VerificationState?: VerificationState;
  WorkflowState?: WorkflowState;
  Workflow?: Workflow;
  RecordState?: RecordState;
  RelatedFindings?: RelatedFinding[];
  Note?: Note;
  Vulnerabilities?: Vulnerability[];
  PatchSummary?: PatchSummary;
  Action?: Action;
  FindingProviderFields?: FindingProviderFields;
  Sample?: boolean;
  GeneratorDetails?: GeneratorDetails;
  ProcessedAt?: string;
  AwsAccountName?: string;
}
export interface KeywordFilter {
  Value?: string;
}
export interface IpFilter {
  Cidr?: string;
}
export interface BooleanFilter {
  Value?: boolean;
}
export interface AwsSecurityFindingFilters {
  ProductArn?: StringFilter[];
  AwsAccountId?: StringFilter[];
  Id?: StringFilter[];
  GeneratorId?: StringFilter[];
  Region?: StringFilter[];
  Type?: StringFilter[];
  FirstObservedAt?: DateFilter[];
  LastObservedAt?: DateFilter[];
  CreatedAt?: DateFilter[];
  UpdatedAt?: DateFilter[];
  SeverityProduct?: NumberFilter[];
  SeverityNormalized?: NumberFilter[];
  SeverityLabel?: StringFilter[];
  Confidence?: NumberFilter[];
  Criticality?: NumberFilter[];
  Title?: StringFilter[];
  Description?: StringFilter[];
  RecommendationText?: StringFilter[];
  SourceUrl?: StringFilter[];
  ProductFields?: MapFilter[];
  ProductName?: StringFilter[];
  CompanyName?: StringFilter[];
  UserDefinedFields?: MapFilter[];
  MalwareName?: StringFilter[];
  MalwareType?: StringFilter[];
  MalwarePath?: StringFilter[];
  MalwareState?: StringFilter[];
  NetworkDirection?: StringFilter[];
  NetworkProtocol?: StringFilter[];
  NetworkSourceIpV4?: IpFilter[];
  NetworkSourceIpV6?: IpFilter[];
  NetworkSourcePort?: NumberFilter[];
  NetworkSourceDomain?: StringFilter[];
  NetworkSourceMac?: StringFilter[];
  NetworkDestinationIpV4?: IpFilter[];
  NetworkDestinationIpV6?: IpFilter[];
  NetworkDestinationPort?: NumberFilter[];
  NetworkDestinationDomain?: StringFilter[];
  ProcessName?: StringFilter[];
  ProcessPath?: StringFilter[];
  ProcessPid?: NumberFilter[];
  ProcessParentPid?: NumberFilter[];
  ProcessLaunchedAt?: DateFilter[];
  ProcessTerminatedAt?: DateFilter[];
  ThreatIntelIndicatorType?: StringFilter[];
  ThreatIntelIndicatorValue?: StringFilter[];
  ThreatIntelIndicatorCategory?: StringFilter[];
  ThreatIntelIndicatorLastObservedAt?: DateFilter[];
  ThreatIntelIndicatorSource?: StringFilter[];
  ThreatIntelIndicatorSourceUrl?: StringFilter[];
  ResourceType?: StringFilter[];
  ResourceId?: StringFilter[];
  ResourcePartition?: StringFilter[];
  ResourceRegion?: StringFilter[];
  ResourceTags?: MapFilter[];
  ResourceAwsEc2InstanceType?: StringFilter[];
  ResourceAwsEc2InstanceImageId?: StringFilter[];
  ResourceAwsEc2InstanceIpV4Addresses?: IpFilter[];
  ResourceAwsEc2InstanceIpV6Addresses?: IpFilter[];
  ResourceAwsEc2InstanceKeyName?: StringFilter[];
  ResourceAwsEc2InstanceIamInstanceProfileArn?: StringFilter[];
  ResourceAwsEc2InstanceVpcId?: StringFilter[];
  ResourceAwsEc2InstanceSubnetId?: StringFilter[];
  ResourceAwsEc2InstanceLaunchedAt?: DateFilter[];
  ResourceAwsS3BucketOwnerId?: StringFilter[];
  ResourceAwsS3BucketOwnerName?: StringFilter[];
  ResourceAwsIamAccessKeyUserName?: StringFilter[];
  ResourceAwsIamAccessKeyPrincipalName?: StringFilter[];
  ResourceAwsIamAccessKeyStatus?: StringFilter[];
  ResourceAwsIamAccessKeyCreatedAt?: DateFilter[];
  ResourceAwsIamUserUserName?: StringFilter[];
  ResourceContainerName?: StringFilter[];
  ResourceContainerImageId?: StringFilter[];
  ResourceContainerImageName?: StringFilter[];
  ResourceContainerLaunchedAt?: DateFilter[];
  ResourceDetailsOther?: MapFilter[];
  ComplianceStatus?: StringFilter[];
  VerificationState?: StringFilter[];
  WorkflowState?: StringFilter[];
  WorkflowStatus?: StringFilter[];
  RecordState?: StringFilter[];
  RelatedFindingsProductArn?: StringFilter[];
  RelatedFindingsId?: StringFilter[];
  NoteText?: StringFilter[];
  NoteUpdatedAt?: DateFilter[];
  NoteUpdatedBy?: StringFilter[];
  Keyword?: KeywordFilter[];
  FindingProviderFieldsConfidence?: NumberFilter[];
  FindingProviderFieldsCriticality?: NumberFilter[];
  FindingProviderFieldsRelatedFindingsId?: StringFilter[];
  FindingProviderFieldsRelatedFindingsProductArn?: StringFilter[];
  FindingProviderFieldsSeverityLabel?: StringFilter[];
  FindingProviderFieldsSeverityOriginal?: StringFilter[];
  FindingProviderFieldsTypes?: StringFilter[];
  Sample?: BooleanFilter[];
  ComplianceSecurityControlId?: StringFilter[];
  ComplianceAssociatedStandardsId?: StringFilter[];
  VulnerabilitiesExploitAvailable?: StringFilter[];
  VulnerabilitiesFixAvailable?: StringFilter[];
  ComplianceSecurityControlParametersName?: StringFilter[];
  ComplianceSecurityControlParametersValue?: StringFilter[];
  AwsAccountName?: StringFilter[];
  ResourceApplicationName?: StringFilter[];
  ResourceApplicationArn?: StringFilter[];
}
export interface AwsSecurityFindingIdentifier {
  Id: string | undefined;
  ProductArn: string | undefined;
}
export interface BatchDeleteAutomationRulesRequest {
  AutomationRulesArns: string[] | undefined;
}
export interface UnprocessedAutomationRule {
  RuleArn?: string;
  ErrorCode?: number;
  ErrorMessage?: string;
}
export interface BatchDeleteAutomationRulesResponse {
  ProcessedAutomationRules?: string[];
  UnprocessedAutomationRules?: UnprocessedAutomationRule[];
}
export interface BatchDisableStandardsRequest {
  StandardsSubscriptionArns: string[] | undefined;
}
export declare const StandardsStatus: {
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly INCOMPLETE: "INCOMPLETE";
  readonly PENDING: "PENDING";
  readonly READY: "READY";
};
export type StandardsStatus =
  (typeof StandardsStatus)[keyof typeof StandardsStatus];
export declare const StatusReasonCode: {
  readonly INTERNAL_ERROR: "INTERNAL_ERROR";
  readonly NO_AVAILABLE_CONFIGURATION_RECORDER: "NO_AVAILABLE_CONFIGURATION_RECORDER";
};
export type StatusReasonCode =
  (typeof StatusReasonCode)[keyof typeof StatusReasonCode];
export interface StandardsStatusReason {
  StatusReasonCode: StatusReasonCode | undefined;
}
export interface StandardsSubscription {
  StandardsSubscriptionArn: string | undefined;
  StandardsArn: string | undefined;
  StandardsInput: Record<string, string> | undefined;
  StandardsStatus: StandardsStatus | undefined;
  StandardsStatusReason?: StandardsStatusReason;
}
export interface BatchDisableStandardsResponse {
  StandardsSubscriptions?: StandardsSubscription[];
}
export interface StandardsSubscriptionRequest {
  StandardsArn: string | undefined;
  StandardsInput?: Record<string, string>;
}
export interface BatchEnableStandardsRequest {
  StandardsSubscriptionRequests: StandardsSubscriptionRequest[] | undefined;
}
export interface BatchEnableStandardsResponse {
  StandardsSubscriptions?: StandardsSubscription[];
}
export interface BatchGetAutomationRulesRequest {
  AutomationRulesArns: string[] | undefined;
}
export interface BatchGetAutomationRulesResponse {
  Rules?: AutomationRulesConfig[];
  UnprocessedAutomationRules?: UnprocessedAutomationRule[];
}
export type Target =
  | Target.AccountIdMember
  | Target.OrganizationalUnitIdMember
  | Target.RootIdMember
  | Target.$UnknownMember;
export declare namespace Target {
  interface AccountIdMember {
    AccountId: string;
    OrganizationalUnitId?: never;
    RootId?: never;
    $unknown?: never;
  }
  interface OrganizationalUnitIdMember {
    AccountId?: never;
    OrganizationalUnitId: string;
    RootId?: never;
    $unknown?: never;
  }
  interface RootIdMember {
    AccountId?: never;
    OrganizationalUnitId?: never;
    RootId: string;
    $unknown?: never;
  }
  interface $UnknownMember {
    AccountId?: never;
    OrganizationalUnitId?: never;
    RootId?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    AccountId: (value: string) => T;
    OrganizationalUnitId: (value: string) => T;
    RootId: (value: string) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: Target, visitor: Visitor<T>) => T;
}
export interface ConfigurationPolicyAssociation {
  Target?: Target;
}
export interface BatchGetConfigurationPolicyAssociationsRequest {
  ConfigurationPolicyAssociationIdentifiers:
    | ConfigurationPolicyAssociation[]
    | undefined;
}
export declare const TargetType: {
  readonly ACCOUNT: "ACCOUNT";
  readonly ORGANIZATIONAL_UNIT: "ORGANIZATIONAL_UNIT";
};
export type TargetType = (typeof TargetType)[keyof typeof TargetType];
export interface ConfigurationPolicyAssociationSummary {
  ConfigurationPolicyId?: string;
  TargetId?: string;
  TargetType?: TargetType;
  AssociationType?: AssociationType;
  UpdatedAt?: Date;
  AssociationStatus?: ConfigurationPolicyAssociationStatus;
  AssociationStatusMessage?: string;
}
export interface UnprocessedConfigurationPolicyAssociation {
  ConfigurationPolicyAssociationIdentifiers?: ConfigurationPolicyAssociation;
  ErrorCode?: string;
  ErrorReason?: string;
}
export interface BatchGetConfigurationPolicyAssociationsResponse {
  ConfigurationPolicyAssociations?: ConfigurationPolicyAssociationSummary[];
  UnprocessedConfigurationPolicyAssociations?: UnprocessedConfigurationPolicyAssociation[];
}
export interface BatchGetSecurityControlsRequest {
  SecurityControlIds: string[] | undefined;
}
export type ParameterValue =
  | ParameterValue.BooleanMember
  | ParameterValue.DoubleMember
  | ParameterValue.EnumMember
  | ParameterValue.EnumListMember
  | ParameterValue.IntegerMember
  | ParameterValue.IntegerListMember
  | ParameterValue.StringMember
  | ParameterValue.StringListMember
  | ParameterValue.$UnknownMember;
export declare namespace ParameterValue {
  interface IntegerMember {
    Integer: number;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface IntegerListMember {
    Integer?: never;
    IntegerList: number[];
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface DoubleMember {
    Integer?: never;
    IntegerList?: never;
    Double: number;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface StringMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String: string;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface StringListMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList: string[];
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface BooleanMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean: boolean;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface EnumMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum: string;
    EnumList?: never;
    $unknown?: never;
  }
  interface EnumListMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList: string[];
    $unknown?: never;
  }
  interface $UnknownMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Integer: (value: number) => T;
    IntegerList: (value: number[]) => T;
    Double: (value: number) => T;
    String: (value: string) => T;
    StringList: (value: string[]) => T;
    Boolean: (value: boolean) => T;
    Enum: (value: string) => T;
    EnumList: (value: string[]) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ParameterValue, visitor: Visitor<T>) => T;
}
export declare const ParameterValueType: {
  readonly CUSTOM: "CUSTOM";
  readonly DEFAULT: "DEFAULT";
};
export type ParameterValueType =
  (typeof ParameterValueType)[keyof typeof ParameterValueType];
export interface ParameterConfiguration {
  ValueType: ParameterValueType | undefined;
  Value?: ParameterValue;
}
export declare const ControlStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type ControlStatus = (typeof ControlStatus)[keyof typeof ControlStatus];
export declare const SeverityRating: {
  readonly CRITICAL: "CRITICAL";
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
  readonly MEDIUM: "MEDIUM";
};
export type SeverityRating =
  (typeof SeverityRating)[keyof typeof SeverityRating];
export declare const UpdateStatus: {
  readonly READY: "READY";
  readonly UPDATING: "UPDATING";
};
export type UpdateStatus = (typeof UpdateStatus)[keyof typeof UpdateStatus];
export interface SecurityControl {
  SecurityControlId: string | undefined;
  SecurityControlArn: string | undefined;
  Title: string | undefined;
  Description: string | undefined;
  RemediationUrl: string | undefined;
  SeverityRating: SeverityRating | undefined;
  SecurityControlStatus: ControlStatus | undefined;
  UpdateStatus?: UpdateStatus;
  Parameters?: Record<string, ParameterConfiguration>;
  LastUpdateReason?: string;
}
export declare const UnprocessedErrorCode: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly INVALID_INPUT: "INVALID_INPUT";
  readonly LIMIT_EXCEEDED: "LIMIT_EXCEEDED";
  readonly NOT_FOUND: "NOT_FOUND";
};
export type UnprocessedErrorCode =
  (typeof UnprocessedErrorCode)[keyof typeof UnprocessedErrorCode];
export interface UnprocessedSecurityControl {
  SecurityControlId: string | undefined;
  ErrorCode: UnprocessedErrorCode | undefined;
  ErrorReason?: string;
}
export interface BatchGetSecurityControlsResponse {
  SecurityControls: SecurityControl[] | undefined;
  UnprocessedIds?: UnprocessedSecurityControl[];
}
export interface StandardsControlAssociationId {
  SecurityControlId: string | undefined;
  StandardsArn: string | undefined;
}
export interface BatchGetStandardsControlAssociationsRequest {
  StandardsControlAssociationIds: StandardsControlAssociationId[] | undefined;
}
export interface StandardsControlAssociationDetail {
  StandardsArn: string | undefined;
  SecurityControlId: string | undefined;
  SecurityControlArn: string | undefined;
  AssociationStatus: AssociationStatus | undefined;
  RelatedRequirements?: string[];
  UpdatedAt?: Date;
  UpdatedReason?: string;
  StandardsControlTitle?: string;
  StandardsControlDescription?: string;
  StandardsControlArns?: string[];
}
export interface UnprocessedStandardsControlAssociation {
  StandardsControlAssociationId: StandardsControlAssociationId | undefined;
  ErrorCode: UnprocessedErrorCode | undefined;
  ErrorReason?: string;
}
export interface BatchGetStandardsControlAssociationsResponse {
  StandardsControlAssociationDetails:
    | StandardsControlAssociationDetail[]
    | undefined;
  UnprocessedAssociations?: UnprocessedStandardsControlAssociation[];
}
export interface BatchImportFindingsRequest {
  Findings: AwsSecurityFinding[] | undefined;
}
export interface ImportFindingsError {
  Id: string | undefined;
  ErrorCode: string | undefined;
  ErrorMessage: string | undefined;
}
export interface BatchImportFindingsResponse {
  FailedCount: number | undefined;
  SuccessCount: number | undefined;
  FailedFindings?: ImportFindingsError[];
}
export interface UpdateAutomationRulesRequestItem {
  RuleArn: string | undefined;
  RuleStatus?: RuleStatus;
  RuleOrder?: number;
  Description?: string;
  RuleName?: string;
  IsTerminal?: boolean;
  Criteria?: AutomationRulesFindingFilters;
  Actions?: AutomationRulesAction[];
}
export interface BatchUpdateAutomationRulesRequest {
  UpdateAutomationRulesRequestItems:
    | UpdateAutomationRulesRequestItem[]
    | undefined;
}
export interface BatchUpdateAutomationRulesResponse {
  ProcessedAutomationRules?: string[];
  UnprocessedAutomationRules?: UnprocessedAutomationRule[];
}
export interface BatchUpdateFindingsRequest {
  FindingIdentifiers: AwsSecurityFindingIdentifier[] | undefined;
  Note?: NoteUpdate;
  Severity?: SeverityUpdate;
  VerificationState?: VerificationState;
  Confidence?: number;
  Criticality?: number;
  Types?: string[];
  UserDefinedFields?: Record<string, string>;
  Workflow?: WorkflowUpdate;
  RelatedFindings?: RelatedFinding[];
}
export interface BatchUpdateFindingsUnprocessedFinding {
  FindingIdentifier: AwsSecurityFindingIdentifier | undefined;
  ErrorCode: string | undefined;
  ErrorMessage: string | undefined;
}
export interface BatchUpdateFindingsResponse {
  ProcessedFindings: AwsSecurityFindingIdentifier[] | undefined;
  UnprocessedFindings: BatchUpdateFindingsUnprocessedFinding[] | undefined;
}
export interface StandardsControlAssociationUpdate {
  StandardsArn: string | undefined;
  SecurityControlId: string | undefined;
  AssociationStatus: AssociationStatus | undefined;
  UpdatedReason?: string;
}
export interface BatchUpdateStandardsControlAssociationsRequest {
  StandardsControlAssociationUpdates:
    | StandardsControlAssociationUpdate[]
    | undefined;
}
export interface UnprocessedStandardsControlAssociationUpdate {
  StandardsControlAssociationUpdate:
    | StandardsControlAssociationUpdate
    | undefined;
  ErrorCode: UnprocessedErrorCode | undefined;
  ErrorReason?: string;
}
export interface BatchUpdateStandardsControlAssociationsResponse {
  UnprocessedAssociationUpdates?: UnprocessedStandardsControlAssociationUpdate[];
}
export interface BooleanConfigurationOptions {
  DefaultValue?: boolean;
}
export interface DoubleConfigurationOptions {
  DefaultValue?: number;
  Min?: number;
  Max?: number;
}
export interface EnumConfigurationOptions {
  DefaultValue?: string;
  AllowedValues?: string[];
}
export interface EnumListConfigurationOptions {
  DefaultValue?: string[];
  MaxItems?: number;
  AllowedValues?: string[];
}
export interface IntegerConfigurationOptions {
  DefaultValue?: number;
  Min?: number;
  Max?: number;
}
export interface IntegerListConfigurationOptions {
  DefaultValue?: number[];
  Min?: number;
  Max?: number;
  MaxItems?: number;
}
export interface StringConfigurationOptions {
  DefaultValue?: string;
  Re2Expression?: string;
  ExpressionDescription?: string;
}
export interface StringListConfigurationOptions {
  DefaultValue?: string[];
  Re2Expression?: string;
  MaxItems?: number;
  ExpressionDescription?: string;
}
export type ConfigurationOptions =
  | ConfigurationOptions.BooleanMember
  | ConfigurationOptions.DoubleMember
  | ConfigurationOptions.EnumMember
  | ConfigurationOptions.EnumListMember
  | ConfigurationOptions.IntegerMember
  | ConfigurationOptions.IntegerListMember
  | ConfigurationOptions.StringMember
  | ConfigurationOptions.StringListMember
  | ConfigurationOptions.$UnknownMember;
export declare namespace ConfigurationOptions {
  interface IntegerMember {
    Integer: IntegerConfigurationOptions;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface IntegerListMember {
    Integer?: never;
    IntegerList: IntegerListConfigurationOptions;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface DoubleMember {
    Integer?: never;
    IntegerList?: never;
    Double: DoubleConfigurationOptions;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface StringMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String: StringConfigurationOptions;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface StringListMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList: StringListConfigurationOptions;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface BooleanMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean: BooleanConfigurationOptions;
    Enum?: never;
    EnumList?: never;
    $unknown?: never;
  }
  interface EnumMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum: EnumConfigurationOptions;
    EnumList?: never;
    $unknown?: never;
  }
  interface EnumListMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList: EnumListConfigurationOptions;
    $unknown?: never;
  }
  interface $UnknownMember {
    Integer?: never;
    IntegerList?: never;
    Double?: never;
    String?: never;
    StringList?: never;
    Boolean?: never;
    Enum?: never;
    EnumList?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Integer: (value: IntegerConfigurationOptions) => T;
    IntegerList: (value: IntegerListConfigurationOptions) => T;
    Double: (value: DoubleConfigurationOptions) => T;
    String: (value: StringConfigurationOptions) => T;
    StringList: (value: StringListConfigurationOptions) => T;
    Boolean: (value: BooleanConfigurationOptions) => T;
    Enum: (value: EnumConfigurationOptions) => T;
    EnumList: (value: EnumListConfigurationOptions) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ConfigurationOptions, visitor: Visitor<T>) => T;
}
export interface ConfigurationPolicySummary {
  Arn?: string;
  Id?: string;
  Name?: string;
  Description?: string;
  UpdatedAt?: Date;
  ServiceEnabled?: boolean;
}
export declare const ControlFindingGenerator: {
  readonly SECURITY_CONTROL: "SECURITY_CONTROL";
  readonly STANDARD_CONTROL: "STANDARD_CONTROL";
};
export type ControlFindingGenerator =
  (typeof ControlFindingGenerator)[keyof typeof ControlFindingGenerator];
export interface CreateActionTargetRequest {
  Name: string | undefined;
  Description: string | undefined;
  Id: string | undefined;
}
export interface CreateActionTargetResponse {
  ActionTargetArn: string | undefined;
}
export declare class ResourceConflictException extends __BaseException {
  readonly name: "ResourceConflictException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceConflictException, __BaseException>
  );
}
export interface CreateAutomationRuleRequest {
  Tags?: Record<string, string>;
  RuleStatus?: RuleStatus;
  RuleOrder: number | undefined;
  RuleName: string | undefined;
  Description: string | undefined;
  IsTerminal?: boolean;
  Criteria: AutomationRulesFindingFilters | undefined;
  Actions: AutomationRulesAction[] | undefined;
}
export interface CreateAutomationRuleResponse {
  RuleArn?: string;
}
export interface SecurityControlCustomParameter {
  SecurityControlId?: string;
  Parameters?: Record<string, ParameterConfiguration>;
}
export interface SecurityControlsConfiguration {
  EnabledSecurityControlIdentifiers?: string[];
  DisabledSecurityControlIdentifiers?: string[];
  SecurityControlCustomParameters?: SecurityControlCustomParameter[];
}
export interface SecurityHubPolicy {
  ServiceEnabled?: boolean;
  EnabledStandardIdentifiers?: string[];
  SecurityControlsConfiguration?: SecurityControlsConfiguration;
}
export type Policy = Policy.SecurityHubMember | Policy.$UnknownMember;
export declare namespace Policy {
  interface SecurityHubMember {
    SecurityHub: SecurityHubPolicy;
    $unknown?: never;
  }
  interface $UnknownMember {
    SecurityHub?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    SecurityHub: (value: SecurityHubPolicy) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: Policy, visitor: Visitor<T>) => T;
}
export interface CreateConfigurationPolicyRequest {
  Name: string | undefined;
  Description?: string;
  ConfigurationPolicy: Policy | undefined;
  Tags?: Record<string, string>;
}
export interface CreateConfigurationPolicyResponse {
  Arn?: string;
  Id?: string;
  Name?: string;
  Description?: string;
  UpdatedAt?: Date;
  CreatedAt?: Date;
  ConfigurationPolicy?: Policy;
}
export interface CreateFindingAggregatorRequest {
  RegionLinkingMode: string | undefined;
  Regions?: string[];
}
export interface CreateFindingAggregatorResponse {
  FindingAggregatorArn?: string;
  FindingAggregationRegion?: string;
  RegionLinkingMode?: string;
  Regions?: string[];
}
export interface CreateInsightRequest {
  Name: string | undefined;
  Filters: AwsSecurityFindingFilters | undefined;
  GroupByAttribute: string | undefined;
}
export interface CreateInsightResponse {
  InsightArn: string | undefined;
}
export interface CreateMembersRequest {
  AccountDetails: AccountDetails[] | undefined;
}
export interface Result {
  AccountId?: string;
  ProcessingResult?: string;
}
export interface CreateMembersResponse {
  UnprocessedAccounts?: Result[];
}
export declare const SecurityControlProperty: {
  readonly Parameters: "Parameters";
};
export type SecurityControlProperty =
  (typeof SecurityControlProperty)[keyof typeof SecurityControlProperty];
export interface DeclineInvitationsRequest {
  AccountIds: string[] | undefined;
}
export interface DeclineInvitationsResponse {
  UnprocessedAccounts?: Result[];
}
export interface DeleteActionTargetRequest {
  ActionTargetArn: string | undefined;
}
export interface DeleteActionTargetResponse {
  ActionTargetArn: string | undefined;
}
export interface DeleteConfigurationPolicyRequest {
  Identifier: string | undefined;
}
export interface DeleteConfigurationPolicyResponse {}
export interface DeleteFindingAggregatorRequest {
  FindingAggregatorArn: string | undefined;
}
export interface DeleteFindingAggregatorResponse {}
export interface DeleteInsightRequest {
  InsightArn: string | undefined;
}
export interface DeleteInsightResponse {
  InsightArn: string | undefined;
}
export interface DeleteInvitationsRequest {
  AccountIds: string[] | undefined;
}
export interface DeleteInvitationsResponse {
  UnprocessedAccounts?: Result[];
}
export interface DeleteMembersRequest {
  AccountIds: string[] | undefined;
}
export interface DeleteMembersResponse {
  UnprocessedAccounts?: Result[];
}
export interface DescribeActionTargetsRequest {
  ActionTargetArns?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface DescribeActionTargetsResponse {
  ActionTargets: ActionTarget[] | undefined;
  NextToken?: string;
}
export interface DescribeHubRequest {
  HubArn?: string;
}
export interface DescribeHubResponse {
  HubArn?: string;
  SubscribedAt?: string;
  AutoEnableControls?: boolean;
  ControlFindingGenerator?: ControlFindingGenerator;
}
export interface DescribeOrganizationConfigurationRequest {}
export declare const OrganizationConfigurationConfigurationType: {
  readonly CENTRAL: "CENTRAL";
  readonly LOCAL: "LOCAL";
};
export type OrganizationConfigurationConfigurationType =
  (typeof OrganizationConfigurationConfigurationType)[keyof typeof OrganizationConfigurationConfigurationType];
export declare const OrganizationConfigurationStatus: {
  readonly ENABLED: "ENABLED";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
};
export type OrganizationConfigurationStatus =
  (typeof OrganizationConfigurationStatus)[keyof typeof OrganizationConfigurationStatus];
export interface OrganizationConfiguration {
  ConfigurationType?: OrganizationConfigurationConfigurationType;
  Status?: OrganizationConfigurationStatus;
  StatusMessage?: string;
}
export interface DescribeOrganizationConfigurationResponse {
  AutoEnable?: boolean;
  MemberAccountLimitReached?: boolean;
  AutoEnableStandards?: AutoEnableStandards;
  OrganizationConfiguration?: OrganizationConfiguration;
}
export interface DescribeProductsRequest {
  NextToken?: string;
  MaxResults?: number;
  ProductArn?: string;
}
export declare const IntegrationType: {
  readonly RECEIVE_FINDINGS_FROM_SECURITY_HUB: "RECEIVE_FINDINGS_FROM_SECURITY_HUB";
  readonly SEND_FINDINGS_TO_SECURITY_HUB: "SEND_FINDINGS_TO_SECURITY_HUB";
  readonly UPDATE_FINDINGS_IN_SECURITY_HUB: "UPDATE_FINDINGS_IN_SECURITY_HUB";
};
export type IntegrationType =
  (typeof IntegrationType)[keyof typeof IntegrationType];
export interface Product {
  ProductArn: string | undefined;
  ProductName?: string;
  CompanyName?: string;
  Description?: string;
  Categories?: string[];
  IntegrationTypes?: IntegrationType[];
  MarketplaceUrl?: string;
  ActivationUrl?: string;
  ProductSubscriptionResourcePolicy?: string;
}
export interface DescribeProductsResponse {
  Products: Product[] | undefined;
  NextToken?: string;
}
export interface DescribeStandardsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface StandardsManagedBy {
  Company?: string;
  Product?: string;
}
export interface Standard {
  StandardsArn?: string;
  Name?: string;
  Description?: string;
  EnabledByDefault?: boolean;
  StandardsManagedBy?: StandardsManagedBy;
}
export interface DescribeStandardsResponse {
  Standards?: Standard[];
  NextToken?: string;
}
export interface DescribeStandardsControlsRequest {
  StandardsSubscriptionArn: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface StandardsControl {
  StandardsControlArn?: string;
  ControlStatus?: ControlStatus;
  DisabledReason?: string;
  ControlStatusUpdatedAt?: Date;
  ControlId?: string;
  Title?: string;
  Description?: string;
  RemediationUrl?: string;
  SeverityRating?: SeverityRating;
  RelatedRequirements?: string[];
}
export interface DescribeStandardsControlsResponse {
  Controls?: StandardsControl[];
  NextToken?: string;
}
export interface DisableImportFindingsForProductRequest {
  ProductSubscriptionArn: string | undefined;
}
export interface DisableImportFindingsForProductResponse {}
export interface DisableOrganizationAdminAccountRequest {
  AdminAccountId: string | undefined;
}
export interface DisableOrganizationAdminAccountResponse {}
export interface DisableSecurityHubRequest {}
export interface DisableSecurityHubResponse {}
export interface DisassociateFromAdministratorAccountRequest {}
export interface DisassociateFromAdministratorAccountResponse {}
export interface DisassociateFromMasterAccountRequest {}
export interface DisassociateFromMasterAccountResponse {}
export interface DisassociateMembersRequest {
  AccountIds: string[] | undefined;
}
export interface DisassociateMembersResponse {}
export interface EnableImportFindingsForProductRequest {
  ProductArn: string | undefined;
}
export interface EnableImportFindingsForProductResponse {
  ProductSubscriptionArn?: string;
}
export interface EnableOrganizationAdminAccountRequest {
  AdminAccountId: string | undefined;
}
export interface EnableOrganizationAdminAccountResponse {}
export interface EnableSecurityHubRequest {
  Tags?: Record<string, string>;
  EnableDefaultStandards?: boolean;
  ControlFindingGenerator?: ControlFindingGenerator;
}
export interface EnableSecurityHubResponse {}
export interface FindingAggregator {
  FindingAggregatorArn?: string;
}
export interface FindingHistoryUpdate {
  UpdatedField?: string;
  OldValue?: string;
  NewValue?: string;
}
export declare const FindingHistoryUpdateSourceType: {
  readonly BATCH_IMPORT_FINDINGS: "BATCH_IMPORT_FINDINGS";
  readonly BATCH_UPDATE_FINDINGS: "BATCH_UPDATE_FINDINGS";
};
export type FindingHistoryUpdateSourceType =
  (typeof FindingHistoryUpdateSourceType)[keyof typeof FindingHistoryUpdateSourceType];
export interface FindingHistoryUpdateSource {
  Type?: FindingHistoryUpdateSourceType;
  Identity?: string;
}
export interface FindingHistoryRecord {
  FindingIdentifier?: AwsSecurityFindingIdentifier;
  UpdateTime?: Date;
  FindingCreated?: boolean;
  UpdateSource?: FindingHistoryUpdateSource;
  Updates?: FindingHistoryUpdate[];
  NextToken?: string;
}
export interface GetAdministratorAccountRequest {}
export interface Invitation {
  AccountId?: string;
  InvitationId?: string;
  InvitedAt?: Date;
  MemberStatus?: string;
}
export interface GetAdministratorAccountResponse {
  Administrator?: Invitation;
}
export interface GetConfigurationPolicyRequest {
  Identifier: string | undefined;
}
export interface GetConfigurationPolicyResponse {
  Arn?: string;
  Id?: string;
  Name?: string;
  Description?: string;
  UpdatedAt?: Date;
  CreatedAt?: Date;
  ConfigurationPolicy?: Policy;
}
export interface GetConfigurationPolicyAssociationRequest {
  Target: Target | undefined;
}
export interface GetConfigurationPolicyAssociationResponse {
  ConfigurationPolicyId?: string;
  TargetId?: string;
  TargetType?: TargetType;
  AssociationType?: AssociationType;
  UpdatedAt?: Date;
  AssociationStatus?: ConfigurationPolicyAssociationStatus;
  AssociationStatusMessage?: string;
}
export interface GetEnabledStandardsRequest {
  StandardsSubscriptionArns?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface GetEnabledStandardsResponse {
  StandardsSubscriptions?: StandardsSubscription[];
  NextToken?: string;
}
export interface GetFindingAggregatorRequest {
  FindingAggregatorArn: string | undefined;
}
export interface GetFindingAggregatorResponse {
  FindingAggregatorArn?: string;
  FindingAggregationRegion?: string;
  RegionLinkingMode?: string;
  Regions?: string[];
}
export interface GetFindingHistoryRequest {
  FindingIdentifier: AwsSecurityFindingIdentifier | undefined;
  StartTime?: Date;
  EndTime?: Date;
  NextToken?: string;
  MaxResults?: number;
}
export interface GetFindingHistoryResponse {
  Records?: FindingHistoryRecord[];
  NextToken?: string;
}
export declare const SortOrder: {
  readonly ASCENDING: "asc";
  readonly DESCENDING: "desc";
};
export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];
export interface SortCriterion {
  Field?: string;
  SortOrder?: SortOrder;
}
export interface GetFindingsRequest {
  Filters?: AwsSecurityFindingFilters;
  SortCriteria?: SortCriterion[];
  NextToken?: string;
  MaxResults?: number;
}
export interface GetFindingsResponse {
  Findings: AwsSecurityFinding[] | undefined;
  NextToken?: string;
}
export interface GetInsightResultsRequest {
  InsightArn: string | undefined;
}
export interface InsightResultValue {
  GroupByAttributeValue: string | undefined;
  Count: number | undefined;
}
export interface InsightResults {
  InsightArn: string | undefined;
  GroupByAttribute: string | undefined;
  ResultValues: InsightResultValue[] | undefined;
}
export interface GetInsightResultsResponse {
  InsightResults: InsightResults | undefined;
}
export interface GetInsightsRequest {
  InsightArns?: string[];
  NextToken?: string;
  MaxResults?: number;
}
export interface Insight {
  InsightArn: string | undefined;
  Name: string | undefined;
  Filters: AwsSecurityFindingFilters | undefined;
  GroupByAttribute: string | undefined;
}
export interface GetInsightsResponse {
  Insights: Insight[] | undefined;
  NextToken?: string;
}
export interface GetInvitationsCountRequest {}
export interface GetInvitationsCountResponse {
  InvitationsCount?: number;
}
export interface GetMasterAccountRequest {}
export interface GetMasterAccountResponse {
  Master?: Invitation;
}
export interface GetMembersRequest {
  AccountIds: string[] | undefined;
}
export interface Member {
  AccountId?: string;
  Email?: string;
  MasterId?: string;
  AdministratorId?: string;
  MemberStatus?: string;
  InvitedAt?: Date;
  UpdatedAt?: Date;
}
export interface GetMembersResponse {
  Members?: Member[];
  UnprocessedAccounts?: Result[];
}
export interface GetSecurityControlDefinitionRequest {
  SecurityControlId: string | undefined;
}
export declare const RegionAvailabilityStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly UNAVAILABLE: "UNAVAILABLE";
};
export type RegionAvailabilityStatus =
  (typeof RegionAvailabilityStatus)[keyof typeof RegionAvailabilityStatus];
export interface ParameterDefinition {
  Description: string | undefined;
  ConfigurationOptions: ConfigurationOptions | undefined;
}
export interface SecurityControlDefinition {
  SecurityControlId: string | undefined;
  Title: string | undefined;
  Description: string | undefined;
  RemediationUrl: string | undefined;
  SeverityRating: SeverityRating | undefined;
  CurrentRegionAvailability: RegionAvailabilityStatus | undefined;
  CustomizableProperties?: SecurityControlProperty[];
  ParameterDefinitions?: Record<string, ParameterDefinition>;
}
export interface GetSecurityControlDefinitionResponse {
  SecurityControlDefinition: SecurityControlDefinition | undefined;
}
export interface InviteMembersRequest {
  AccountIds: string[] | undefined;
}
export interface InviteMembersResponse {
  UnprocessedAccounts?: Result[];
}
export interface ListAutomationRulesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAutomationRulesResponse {
  AutomationRulesMetadata?: AutomationRulesMetadata[];
  NextToken?: string;
}
export interface ListConfigurationPoliciesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListConfigurationPoliciesResponse {
  ConfigurationPolicySummaries?: ConfigurationPolicySummary[];
  NextToken?: string;
}
export interface ListConfigurationPolicyAssociationsRequest {
  NextToken?: string;
  MaxResults?: number;
  Filters?: AssociationFilters;
}
export interface ListConfigurationPolicyAssociationsResponse {
  ConfigurationPolicyAssociationSummaries?: ConfigurationPolicyAssociationSummary[];
  NextToken?: string;
}
export interface ListEnabledProductsForImportRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListEnabledProductsForImportResponse {
  ProductSubscriptions?: string[];
  NextToken?: string;
}
export interface ListFindingAggregatorsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListFindingAggregatorsResponse {
  FindingAggregators?: FindingAggregator[];
  NextToken?: string;
}
export interface ListInvitationsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListInvitationsResponse {
  Invitations?: Invitation[];
  NextToken?: string;
}
export interface ListMembersRequest {
  OnlyAssociated?: boolean;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListMembersResponse {
  Members?: Member[];
  NextToken?: string;
}
export interface ListOrganizationAdminAccountsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListOrganizationAdminAccountsResponse {
  AdminAccounts?: AdminAccount[];
  NextToken?: string;
}
export interface ListSecurityControlDefinitionsRequest {
  StandardsArn?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListSecurityControlDefinitionsResponse {
  SecurityControlDefinitions: SecurityControlDefinition[] | undefined;
  NextToken?: string;
}
export interface ListStandardsControlAssociationsRequest {
  SecurityControlId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface StandardsControlAssociationSummary {
  StandardsArn: string | undefined;
  SecurityControlId: string | undefined;
  SecurityControlArn: string | undefined;
  AssociationStatus: AssociationStatus | undefined;
  RelatedRequirements?: string[];
  UpdatedAt?: Date;
  UpdatedReason?: string;
  StandardsControlTitle?: string;
  StandardsControlDescription?: string;
}
export interface ListStandardsControlAssociationsResponse {
  StandardsControlAssociationSummaries:
    | StandardsControlAssociationSummary[]
    | undefined;
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  Message?: string;
  Code?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export interface StartConfigurationPolicyAssociationRequest {
  ConfigurationPolicyIdentifier: string | undefined;
  Target: Target | undefined;
}
export interface StartConfigurationPolicyAssociationResponse {
  ConfigurationPolicyId?: string;
  TargetId?: string;
  TargetType?: TargetType;
  AssociationType?: AssociationType;
  UpdatedAt?: Date;
  AssociationStatus?: ConfigurationPolicyAssociationStatus;
  AssociationStatusMessage?: string;
}
export interface StartConfigurationPolicyDisassociationRequest {
  Target?: Target;
  ConfigurationPolicyIdentifier: string | undefined;
}
export interface StartConfigurationPolicyDisassociationResponse {}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateActionTargetRequest {
  ActionTargetArn: string | undefined;
  Name?: string;
  Description?: string;
}
export interface UpdateActionTargetResponse {}
export interface UpdateConfigurationPolicyRequest {
  Identifier: string | undefined;
  Name?: string;
  Description?: string;
  UpdatedReason?: string;
  ConfigurationPolicy?: Policy;
}
export interface UpdateConfigurationPolicyResponse {
  Arn?: string;
  Id?: string;
  Name?: string;
  Description?: string;
  UpdatedAt?: Date;
  CreatedAt?: Date;
  ConfigurationPolicy?: Policy;
}
export interface UpdateFindingAggregatorRequest {
  FindingAggregatorArn: string | undefined;
  RegionLinkingMode: string | undefined;
  Regions?: string[];
}
export interface UpdateFindingAggregatorResponse {
  FindingAggregatorArn?: string;
  FindingAggregationRegion?: string;
  RegionLinkingMode?: string;
  Regions?: string[];
}
export interface UpdateFindingsRequest {
  Filters: AwsSecurityFindingFilters | undefined;
  Note?: NoteUpdate;
  RecordState?: RecordState;
}
export interface UpdateFindingsResponse {}
export interface UpdateInsightRequest {
  InsightArn: string | undefined;
  Name?: string;
  Filters?: AwsSecurityFindingFilters;
  GroupByAttribute?: string;
}
export interface UpdateInsightResponse {}
export interface UpdateOrganizationConfigurationRequest {
  AutoEnable: boolean | undefined;
  AutoEnableStandards?: AutoEnableStandards;
  OrganizationConfiguration?: OrganizationConfiguration;
}
export interface UpdateOrganizationConfigurationResponse {}
export interface UpdateSecurityControlRequest {
  SecurityControlId: string | undefined;
  Parameters: Record<string, ParameterConfiguration> | undefined;
  LastUpdateReason?: string;
}
export interface UpdateSecurityControlResponse {}
export interface UpdateSecurityHubConfigurationRequest {
  AutoEnableControls?: boolean;
  ControlFindingGenerator?: ControlFindingGenerator;
}
export interface UpdateSecurityHubConfigurationResponse {}
export interface UpdateStandardsControlRequest {
  StandardsControlArn: string | undefined;
  ControlStatus?: ControlStatus;
  DisabledReason?: string;
}
export interface UpdateStandardsControlResponse {}
