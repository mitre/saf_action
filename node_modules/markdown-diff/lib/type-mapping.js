"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeMapping = void 0;
class TypeMapping {
    static isLink(token) {
        return token.type === 'link';
    }
    static isTable(token) {
        return token.type === 'table';
    }
    static isText(token) {
        return token.type === 'text';
    }
    static isList(token) {
        // @ts-ignore
        return token.type === 'list';
    }
    static isBlockQuote(token) {
        return token.type === 'blockquote';
    }
    static isBr(token) {
        return token.type === 'br';
    }
    static isCode(token) {
        return token.type === 'code';
    }
    static isCodespan(token) {
        return token.type === 'codespan';
    }
    static isDef(token) {
        return false;
        // return (token as Tokens.Def) === 'def';
    }
    static isEm(token) {
        return token.type === 'em';
    }
    static isEscape(token) {
        return token.type === 'escape';
    }
    static isHr(token) {
        return token.type === 'hr';
    }
    static isHtml(token) {
        return token.type === 'html';
    }
    static isStrong(token) {
        return token.type === 'strong';
    }
    static isTag(token) {
        const tok = token;
        return tok.inLink !== undefined && tok.inRawBlock !== undefined && (tok.type === 'html' || tok.type === 'text');
    }
    static isSpace(token) {
        return token.type === 'space';
    }
    static isHeading(token) {
        return token.type === 'heading';
    }
    static hasTokens(token) {
        return token && token.tokens !== undefined;
    }
}
exports.TypeMapping = TypeMapping;
//# sourceMappingURL=type-mapping.js.map