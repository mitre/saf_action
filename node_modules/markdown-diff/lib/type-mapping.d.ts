import { Token, Tokens, TokensList } from 'marked';
export interface TokenWithChildren {
    tokens: TokensList;
}
export declare class TypeMapping {
    static isLink(token: Token): token is Tokens.Link;
    static isTable(token: Token): token is Tokens.Table;
    static isText(token: Token): token is Tokens.Text;
    static isList(token: Token): token is Tokens.List;
    static isBlockQuote(token: Token): token is Tokens.Blockquote & TokenWithChildren;
    static isBr(token: Token): token is Tokens.Br;
    static isCode(token: Token): token is Tokens.Code;
    static isCodespan(token: Token): token is Tokens.Codespan;
    static isDef(token: Token): token is Tokens.Def;
    static isEm(token: Token): token is Tokens.Em;
    static isEscape(token: Token): token is Tokens.Escape;
    static isHr(token: Token): token is Tokens.Hr;
    static isHtml(token: Token): token is Tokens.HTML;
    static isStrong(token: Token): token is Tokens.Strong;
    static isTag(token: Token): token is Tokens.Tag;
    static isSpace(token: Token): token is Tokens.Space;
    static isHeading(token: Token): token is Tokens.Heading;
    static hasTokens(token: any): token is TokenWithChildren;
}
