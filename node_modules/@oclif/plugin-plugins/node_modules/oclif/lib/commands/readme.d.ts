import { Command, Interfaces } from '@oclif/core';
export default class Readme extends Command {
    static description: string;
    static flags: {
        aliases: Interfaces.BooleanFlag<boolean>;
        multi: Interfaces.BooleanFlag<boolean>;
        'nested-topics-depth': Interfaces.OptionFlag<number | undefined, Interfaces.CustomOptions>;
        'output-dir': Interfaces.OptionFlag<string, Interfaces.CustomOptions>;
        'plugin-directory': Interfaces.OptionFlag<string | undefined, Interfaces.CustomOptions>;
        'readme-path': Interfaces.OptionFlag<string, Interfaces.CustomOptions>;
        'repository-prefix': Interfaces.OptionFlag<string | undefined, Interfaces.CustomOptions>;
        version: Interfaces.OptionFlag<string | undefined, Interfaces.CustomOptions>;
    };
    static summary: string;
    private flags;
    private HelpClass;
    commandCode(config: Interfaces.Config, c: Command.Cached): string | undefined;
    commands(config: Interfaces.Config, commands: Command.Cached[]): string;
    createTopicFile(file: string, config: Interfaces.Config, topic: Interfaces.Topic, commands: Command.Cached[]): void;
    multiCommands(config: Interfaces.Config, commands: Command.Cached[], dir: string, nestedTopicsDepth: number | undefined): string;
    renderCommand(config: Interfaces.Config, c: Command.Cached): string;
    replaceTag(readme: string, tag: string, body: string): string;
    run(): Promise<void>;
    toc(__: Interfaces.Config, readme: string): string;
    usage(config: Interfaces.Config): string;
    /**
     * fetches the path to a command
     */
    private commandPath;
    private commandUsage;
    private repo;
}
