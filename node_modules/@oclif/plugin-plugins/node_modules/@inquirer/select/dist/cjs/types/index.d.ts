import { Separator } from '@inquirer/core';
type Choice<Value> = {
    value: Value;
    name?: string;
    description?: string;
    disabled?: boolean | string;
    type?: never;
};
declare const _default: <Value>(config: {
    message: string;
    choices: readonly (Separator | Choice<Value>)[];
    pageSize?: number | undefined;
    loop?: boolean | undefined;
    default?: unknown;
    theme?: {
        icon?: {
            cursor?: string | undefined;
        } | undefined;
        style?: {
            disabled?: {} | undefined;
            answer?: {} | undefined;
            message?: {} | undefined;
            error?: {} | undefined;
            defaultAnswer?: {} | undefined;
            help?: {} | undefined;
            highlight?: {} | undefined;
            key?: {} | undefined;
        } | undefined;
        prefix?: string | undefined;
        spinner?: {
            interval?: number | undefined;
            frames?: (string | undefined)[] | undefined;
        } | undefined;
    } | undefined;
}, context?: import("@inquirer/type").Context | undefined) => import("@inquirer/type").CancelablePromise<Value>;
export default _default;
export { Separator };
