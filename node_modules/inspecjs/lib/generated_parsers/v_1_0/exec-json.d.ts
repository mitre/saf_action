export interface ExecJSON {
    platform: Platform;
    profiles: ExecJSONProfile[];
    statistics: Statistics;
    version: string;
}
export interface Platform {
    name: string;
    release: string;
    target_id?: null | string;
}
export interface ExecJSONProfile {
    attributes: {
        [key: string]: any;
    }[];
    controls: ExecJSONControl[];
    copyright?: null | string;
    copyright_email?: null | string;
    depends?: Dependency[] | null;
    description?: null | string;
    groups: ControlGroup[];
    inspec_version?: null | string;
    license?: null | string;
    maintainer?: null | string;
    name: string;
    parent_profile?: null | string;
    sha256: string;
    skip_message?: null | string;
    status?: null | string;
    status_message?: null | string;
    summary?: null | string;
    supports: SupportedPlatform[];
    title?: null | string;
    version?: null | string;
}
export interface ExecJSONControl {
    attestation_data?: null | AttestationData;
    code?: null | string;
    desc?: null | string;
    descriptions?: ControlDescription[] | null;
    id: string;
    impact: number;
    refs: Reference[];
    results: ControlResult[];
    source_location: SourceLocation;
    tags: {
        [key: string]: any;
    };
    title?: null | string;
    waiver_data?: null | WaiverData;
}
export interface AttestationData {
    control_id: string;
    explanation: string;
    frequency: string;
    status: ControlAttestationStatus;
    updated: string;
    updated_by: string;
}
export declare enum ControlAttestationStatus {
    Failed = "failed",
    Passed = "passed"
}
export interface ControlDescription {
    data: string;
    label: string;
}
export interface Reference {
    ref?: {
        [key: string]: any;
    }[] | string;
    url?: string;
    uri?: string;
}
export interface ControlResult {
    backtrace?: string[] | null;
    code_desc: string;
    exception?: null | string;
    message?: null | string;
    resource?: null | string;
    resource_id?: null | string;
    run_time?: number | null;
    skip_message?: null | string;
    start_time: string;
    status?: ControlResultStatus | null;
}
export declare enum ControlResultStatus {
    Error = "error",
    Failed = "failed",
    Passed = "passed",
    Skipped = "skipped"
}
export interface SourceLocation {
    line?: number | null;
    ref?: null | string;
}
export interface WaiverData {
    expiration_date?: null | string;
    justification?: null | string;
    message?: null | string;
    run?: boolean | null;
    skipped_due_to_waiver?: boolean | null | string;
}
export interface Dependency {
    branch?: null | string;
    compliance?: null | string;
    git?: null | string;
    name?: null | string;
    path?: null | string;
    status?: null | string;
    status_message?: null | string;
    supermarket?: null | string;
    url?: null | string;
}
export interface ControlGroup {
    controls: string[];
    id: string;
    title?: null | string;
}
export interface SupportedPlatform {
    "os-family"?: null | string;
    "os-name"?: null | string;
    platform?: null | string;
    "platform-family"?: null | string;
    "platform-name"?: null | string;
    release?: null | string;
}
export interface Statistics {
    controls?: null | StatisticHash;
    duration?: number | null;
}
export interface StatisticHash {
    failed?: null | StatisticBlock;
    passed?: null | StatisticBlock;
    skipped?: null | StatisticBlock;
}
export interface StatisticBlock {
    total: number;
}
export declare class Convert {
    static toExecJSON(json: string): ExecJSON;
    static execJSONToJson(value: ExecJSON): string;
}
