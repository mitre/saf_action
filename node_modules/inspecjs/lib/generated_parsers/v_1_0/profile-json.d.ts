export interface ProfileJSON {
    controls: ProfileJSONControl[];
    copyright?: null | string;
    copyright_email?: null | string;
    depends?: Dependency[] | null;
    generator?: null | Generator;
    groups: ControlGroup[];
    inputs?: {
        [key: string]: any;
    }[] | null;
    maintainer?: null | string;
    name: string;
    sha256: string;
    status?: null | string;
    supports: SupportedPlatform[];
    title?: null | string;
    version?: null | string;
}
export interface ProfileJSONControl {
    code: string;
    desc?: null | string;
    descriptions?: {
        [key: string]: string;
    } | null;
    id: string;
    impact: number;
    refs?: Reference[] | null;
    source_location?: null | SourceLocation;
    tags: {
        [key: string]: any;
    };
    title?: null | string;
}
export interface Reference {
    ref?: {
        [key: string]: any;
    }[] | string;
    url?: string;
    uri?: string;
}
export interface SourceLocation {
    line?: number | null;
    ref?: null | string;
}
export interface Dependency {
    branch?: null | string;
    compliance?: null | string;
    git?: null | string;
    name?: null | string;
    path?: null | string;
    status?: null | string;
    status_message?: null | string;
    supermarket?: null | string;
    url?: null | string;
}
export interface Generator {
    name: string;
    version: string;
}
export interface ControlGroup {
    controls: string[];
    id: string;
    title?: null | string;
}
export interface SupportedPlatform {
    "os-family"?: null | string;
    "os-name"?: null | string;
    platform?: null | string;
    "platform-family"?: null | string;
    "platform-name"?: null | string;
    release?: null | string;
}
export declare class Convert {
    static toProfileJSON(json: string): ProfileJSON;
    static profileJSONToJson(value: ProfileJSON): string;
}
