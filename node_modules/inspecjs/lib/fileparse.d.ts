import { ContextualizedEvaluation, ContextualizedProfile } from './context';
import * as EXEC_JSON_1_0 from './generated_parsers/v_1_0/exec-json';
import * as EXEC_JSON_MIN_1_0 from './generated_parsers/v_1_0/exec-jsonmin';
import * as PROFILE_JSON_1_0 from './generated_parsers/v_1_0/profile-json';
interface ConversionResults {
    '1_0_ExecJson'?: EXEC_JSON_1_0.ExecJSON;
    '1_0_ExecJsonMin'?: EXEC_JSON_MIN_1_0.ExecJsonmin;
    '1_0_ProfileJson'?: PROFILE_JSON_1_0.ProfileJSON;
}
export declare type ConversionErrors = {
    [K in keyof ConversionResults]?: unknown;
};
export interface ConversionResult extends ConversionResults {
    errors?: ConversionErrors;
}
export declare function convertFile(jsonText: string, keepErrors?: boolean): ConversionResult;
export declare type AnyExec = EXEC_JSON_1_0.ExecJSON;
export declare type AnyEval = AnyExec;
export declare type AnyProfile = PROFILE_JSON_1_0.ProfileJSON | EXEC_JSON_1_0.ExecJSONProfile;
export declare type AnyEvalProfile = EXEC_JSON_1_0.ExecJSONProfile;
export declare type AnyControl = PROFILE_JSON_1_0.ProfileJSONControl | EXEC_JSON_1_0.ExecJSONControl;
export declare type AnyEvalControl = EXEC_JSON_1_0.ExecJSONControl;
export declare function convertFileContextual(jsonText: string): ContextualizedEvaluation | ContextualizedProfile;
export declare function isContextualizedEvaluation(v: ContextualizedEvaluation | ContextualizedProfile): v is ContextualizedEvaluation;
export declare function isContextualizedProfile(v: ContextualizedEvaluation | ContextualizedProfile): v is ContextualizedProfile;
export {};
