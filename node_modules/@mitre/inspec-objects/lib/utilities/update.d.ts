import winston from 'winston';
import Control from '../objects/control';
import Profile from '../objects/profile';
import { ProfileDiff } from '../types/diff';
import { OvalDefinitionValue } from '../types/oval';
export declare type UpdatedProfileReturn = {
    profile: Profile;
    diff: {
        ignoreFormattingDiff: ProfileDiff;
        rawDiff: Record<string, unknown>;
    };
    markdown: string;
};
export declare function getExistingDescribeFromControl(control: Control): string;
export declare function findUpdatedControlByAllIdentifiers(existingControl: Control, updatedControls: Control[]): Control | undefined;
export declare function updateControl(from: Control, update: Partial<Control>, logger: winston.Logger): Control;
export declare function updateProfile(from: Profile, using: Profile, logger: winston.Logger): Omit<UpdatedProfileReturn, 'markdown'>;
export declare function updateProfileUsingXCCDF(from: Profile, using: string, id: 'group' | 'rule' | 'version' | 'cis', logger: winston.Logger, ovalDefinitions?: Record<string, OvalDefinitionValue>): UpdatedProfileReturn;
