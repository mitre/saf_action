import { OvalDefinitionValue, DefinitionCriterion } from '../types/oval';
/**
 * Extracts all test references from a list of initial criteria.
 *
 * This function recursively traverses the provided criteria and extracts
 * all test references (`@_test_ref`) from each criterion. It returns an
 * array of all found test references.
 *
 * @param initialCriteria - An array of `DefinitionCriterion` objects to extract test references from.
 * @returns An array of strings containing all extracted test references.
 */
export declare function extractAllCriteriaRefs(initialCriteria: DefinitionCriterion[]): string[];
/**
 * Processes an OVAL (Open Vulnerability and Assessment Language) XML string and converts it into a JSON object.
 * Extracts definitions and their associated criteria references and resolved values.
 * The function performs the following steps:
 * 1. Converts the OVAL XML string into a JSON object.
 * 2. Iterates through the OVAL definitions and extracts each definition.
 * 3. For each definition, extracts criteria references and resolves the associated objects and states.
 * 4. Logs warnings if any objects or states cannot be found.
 *
 * The returned record contains:
 * - The original definition.
 * - An array of criteria references.
 * - An array of resolved values, each containing the original criteria, resolved objects, and resolved states.
 *
 * @param {string} [oval] - The OVAL XML string to be processed. If not provided, the function returns `undefined`.
 * @returns {Record<string, OvalDefinitionValue> | undefined} - A record of extracted definitions with their
 *  criteria references and resolved values, or `undefined` if no OVAL string is provided.
 */
export declare function processOVAL(oval?: string): Record<string, OvalDefinitionValue> | undefined;
