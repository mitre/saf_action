"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setProcessLogFileName = setProcessLogFileName;
exports.getProcessLogData = getProcessLogData;
exports.addToProcessLogData = addToProcessLogData;
exports.saveProcessLogData = saveProcessLogData;
exports.printYellow = printYellow;
exports.printBgYellow = printBgYellow;
exports.printYellowGreen = printYellowGreen;
exports.printYellowBgGreen = printYellowBgGreen;
exports.printRed = printRed;
exports.printBgRed = printBgRed;
exports.printBgRedRed = printBgRedRed;
exports.printMagenta = printMagenta;
exports.printBgMagentaRed = printBgMagentaRed;
exports.printCyan = printCyan;
exports.printGreen = printGreen;
const tslib_1 = require("tslib");
const fs_1 = tslib_1.__importDefault(require("fs"));
const colors_1 = tslib_1.__importDefault(require("colors")); // eslint-disable-line no-restricted-imports
const processLogData = [];
let logFileName = '';
function setProcessLogFileName(fileName) {
    logFileName = fileName;
}
function getProcessLogData() {
    return processLogData;
}
function addToProcessLogData(str) {
    processLogData.push(str);
}
function saveProcessLogData() {
    if (!logFileName) {
        logFileName = 'CliProcessOutput.log';
    }
    const file = fs_1.default.createWriteStream(logFileName);
    file.on('error', () => {
        throw new Error('Error saving the CLI process log data');
    });
    processLogData.forEach(value => file.write(`${value}\n`));
    file.end();
}
// Print Yellow and various combination
function printYellow(info) {
    console.log(colors_1.default.yellow(info));
    processLogData.push(`${info}`);
}
function printBgYellow(info) {
    console.log(colors_1.default.bgYellow(info));
    processLogData.push(`${info}`);
}
function printYellowGreen(title, info) {
    console.log(colors_1.default.yellow(title), colors_1.default.green(info));
    processLogData.push(`${title} ${info}`);
}
function printYellowBgGreen(title, info) {
    console.log(colors_1.default.yellow(title), colors_1.default.bgGreen(info));
    processLogData.push(`${title} ${info}`);
}
// Print Red and various combination
function printRed(info) {
    console.log(colors_1.default.red(info));
    processLogData.push(`${info}`);
}
function printBgRed(info) {
    console.log(colors_1.default.bgRed(info));
    processLogData.push(`${info}`);
}
function printBgRedRed(title, info) {
    console.log(colors_1.default.bgRed(title), colors_1.default.red(info));
    processLogData.push(`${title} ${info}`);
}
// Print Magenta and various combination
function printMagenta(info) {
    console.log(colors_1.default.magenta(info));
    processLogData.push(`${info}`);
}
function printBgMagentaRed(title, info) {
    console.log(colors_1.default.bgMagenta(title), colors_1.default.red(info));
    processLogData.push(`${title} ${info}`);
}
// Print Cyan
function printCyan(info) {
    console.log(colors_1.default.cyan(info));
    processLogData.push(`${info}`);
}
// Print Green
function printGreen(info) {
    console.log(colors_1.default.green(info));
    processLogData.push(`${info}`);
}
//# sourceMappingURL=cliHelper.js.map