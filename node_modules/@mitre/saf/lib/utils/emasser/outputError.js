"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.outputError = outputError;
const tslib_1 = require("tslib");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
/**
 * Generates a formatted error message from the provided data object.
 *
 * @param data - The data object containing error information.
 * @returns A stringified JSON object representing the error message.
 *
 * The function checks for the presence of specific properties within the data object:
 * - If `data.status` exists, it uses this value as the error code.
 * - If `data.code` exists, it uses this value as the error message.
 * - If `data.response.data` exists, it uses this object as the result.
 * - If `data.response.status` exists, it uses this value as the error
 *      code and `data.response.statusText` as the error message.
 *
 * If none of the above properties are found, it defaults to an error code of
 * 'Unknown' and an error message of 'Unable to access error message(s)'.
 */
function outputError(data) {
    let result = { meta: { code: (lodash_1.default.has(data, 'status')) ? lodash_1.default.get(data, 'status') : 'Unknown',
            errorMessage: (lodash_1.default.has(data, 'code')) ? lodash_1.default.get(data, 'code') : 'Unable to access error message(s)' } };
    if (lodash_1.default.has(data, 'response.data')) {
        result = lodash_1.default.get(data, 'response.data') || result;
    }
    else if (lodash_1.default.has(data, 'response.status')) {
        result = { meta: { code: lodash_1.default.get(data, 'response.status'), errorMessage: lodash_1.default.get(data, 'response.statusText') } };
    }
    return JSON.stringify(result, null, 2);
}
//# sourceMappingURL=outputError.js.map