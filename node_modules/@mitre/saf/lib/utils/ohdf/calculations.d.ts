import { ContextualizedEvaluation, ContextualizedProfile } from 'inspecjs';
/**
 * Calculates the summaries for the provided execution JSONs.
 * @param execJSONs - An object mapping file paths to their corresponding execution JSONs.
 * @returns An object containing the calculated summaries.
 */
export declare function calculateSummariesForExecJSONs(execJSONs: Record<string, ContextualizedEvaluation>): Record<string, Record<string, Record<string, number>>[]>;
/**
 * Calculates the compliance scores for the provided execution JSONs.
 * @param execJSONs - An object mapping file paths to their corresponding execution JSONs.
 * @returns An object containing the calculated compliance scores.
 */
export declare function calculateComplianceScoresForExecJSONs(execJSONs: Record<string, ContextualizedEvaluation>): Record<string, number[]>;
/**
 * Calculates the totals for the provided summaries.
 * @param summaries - The summaries to calculate the totals for.
 * @returns An object containing the calculated totals.
 */
export declare function calculateTotalCountsForSummaries(summaries: Record<string, Record<string, Record<string, number>>[]>): Record<string, Record<string, number>>;
/**
 * Calculates the severity counts for the provided summary and profile.
 * @param summary - The summary to calculate the severity counts for.
 * @param parsedProfile - The profile to use for the calculation.
 * @returns void - This method does not return anything, it modifies the 'summary' object passed as a parameter.
 */
export declare function calculateSeverityCounts(summary: Record<string, Record<string, number>>, parsedProfile: ContextualizedProfile): void;
/**
 * Calculates the total counts for the provided summary.
 * @param summary - The summary to calculate the total counts for.
 * @returns void - This method does not return anything, it modifies the 'summary' object passed as a parameter.
 */
export declare function calculateTotalCounts(summary: Record<string, Record<string, number>>): void;
