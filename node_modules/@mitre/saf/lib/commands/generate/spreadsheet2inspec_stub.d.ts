import { Command } from '@oclif/core';
import { InSpecControl } from '../../types/inspec';
export default class Spreadsheet2HDF extends Command {
    static usage: string;
    static description: string;
    static examples: string[];
    static flags: {
        help: import("@oclif/core/lib/interfaces").BooleanFlag<void>;
        input: import("@oclif/core/lib/interfaces").OptionFlag<string, import("@oclif/core/lib/interfaces").CustomOptions>;
        controlNamePrefix: import("@oclif/core/lib/interfaces").OptionFlag<string, import("@oclif/core/lib/interfaces").CustomOptions>;
        format: import("@oclif/core/lib/interfaces").OptionFlag<string, import("@oclif/core/lib/interfaces").CustomOptions>;
        encodingHeader: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        metadata: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces").CustomOptions>;
        mapping: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces").CustomOptions>;
        lineLength: import("@oclif/core/lib/interfaces").OptionFlag<number, import("@oclif/core/lib/interfaces").CustomOptions>;
        output: import("@oclif/core/lib/interfaces").OptionFlag<string, import("@oclif/core/lib/interfaces").CustomOptions>;
    };
    matchReferences(control: Partial<InSpecControl>): Partial<InSpecControl>;
    matchImpactFromSeverityIfImpactNotSet(control: Partial<InSpecControl>): Partial<InSpecControl>;
    matchCISControls(control: Partial<InSpecControl>, flags: {
        [name: string]: any;
    }): Partial<InSpecControl>;
    extractCCIsFromText(control: Partial<InSpecControl>): Partial<InSpecControl>;
    run(): Promise<void>;
}
