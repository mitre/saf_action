import { Command } from '@oclif/core';
export default class EmasserGetMilestones extends Command {
    static readonly usage = "<%= command.id %> [ARGUMENT] [FLAGS] \n \u001B[93m NOTE: see EXAMPLES for argument case format\u001B[0m";
    static readonly description: string;
    static readonly examples: string[];
    static readonly flags: {
        systemId?: import("@oclif/core/interfaces").OptionFlag<number>;
        poamId?: import("@oclif/core/interfaces").OptionFlag<number>;
        poamsId?: import("@oclif/core/interfaces").OptionFlag<number[]>;
        milestoneId?: import("@oclif/core/interfaces").OptionFlag<number>;
        milestonesId?: import("@oclif/core/interfaces").OptionFlag<number[]>;
        workflowInstanceId?: import("@oclif/core/interfaces").OptionFlag<number>;
        pageIndex?: import("@oclif/core/interfaces").OptionFlag<number | undefined>;
        includeComments?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        includeDecommissionSystems?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        excludeInherited?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        includeInactive?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        isTemplate?: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        includeDitprMetrics?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        includeDecommissioned?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        reportsForScorecard?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        latestOnly?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        systemOnly?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        compress?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        printToStdOut?: import("@oclif/core/interfaces").BooleanFlag<boolean | undefined>;
        policy?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        registrationType?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        ditprId?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        coamsId?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        roleCategory?: import("@oclif/core/interfaces").OptionFlag<string>;
        role?: import("@oclif/core/interfaces").OptionFlag<string>;
        acronyms?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        controlAcronyms?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        assessmentProcedures?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        ccis?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        sinceDate?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        scheduledCompletionDateStart?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        scheduledCompletionDateEnd?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        filename?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        status?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        assessmentProcedure?: import("@oclif/core/interfaces").OptionFlag<string>;
        testedBy?: import("@oclif/core/interfaces").OptionFlag<string>;
        testDate?: import("@oclif/core/interfaces").OptionFlag<string>;
        description?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        artifactDescription?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        complianceStatus?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        scheduledCompletionDate?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        orgId?: import("@oclif/core/interfaces").OptionFlag<number>;
        pageSize?: import("@oclif/core/interfaces").OptionFlag<number | undefined>;
        fileName?: import("@oclif/core/interfaces").OptionFlag<string[]>;
        resourceId?: import("@oclif/core/interfaces").OptionFlag<string[]>;
        containerId?: import("@oclif/core/interfaces").OptionFlag<string[]>;
        assetsHardwareId?: import("@oclif/core/interfaces").OptionFlag<string[]>;
        assetsSoftwareId?: import("@oclif/core/interfaces").OptionFlag<string[]>;
        dataFile?: import("@oclif/core/interfaces").OptionFlag<string>;
        type?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        category?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        refPageNumber?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        controls?: import("@oclif/core/interfaces").OptionFlag<string | undefined>;
        signedDate?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        expirationDate?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        lastReviewDate?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        controlAcronym?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        comments?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        workflow?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        name?: import("@oclif/core/interfaces").OptionFlag<string | any>;
        help: import("@oclif/core/interfaces").BooleanFlag<void>;
    };
    static readonly args: {
        name: import("@oclif/core/interfaces").Arg<string | undefined, Record<string, unknown>>;
        byPoamId: import("@oclif/core/interfaces").Arg<string | undefined, Record<string, unknown>>;
        byMilestoneId: import("@oclif/core/interfaces").Arg<string | undefined, Record<string, unknown>>;
    };
    run(): Promise<void>;
    catch(error: any): Promise<void>;
}
