"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const json_colorizer_1 = tslib_1.__importDefault(require("json-colorizer"));
const core_1 = require("@oclif/core");
const apiConnection_1 = require("../../../utils/emasser/apiConnection");
const emass_client_1 = require("@mitre/emass_client");
const outputFormatter_1 = require("../../../utils/emasser/outputFormatter");
const outputError_1 = require("../../../utils/emasser/outputError");
const utilities_1 = require("../../../utils/emasser/utilities");
class EmasserGetControls extends core_1.Command {
    static usage = '<%= command.id %> [options]';
    static description = 'Get system Security Control information for both the Implementation Plan and Risk Assessment';
    static examples = ['<%= config.bin %> <%= command.id %> --systemId <value> [option]'];
    static flags = {
        help: core_1.Flags.help({ char: 'h', description: 'Show emasser CLI help for the GET Controls endpoint' }),
        ...(0, utilities_1.getFlagsForEndpoint)(process.argv), // skipcq: JS-0349
    };
    async run() {
        const { flags } = await this.parse(EmasserGetControls);
        const apiCxn = new apiConnection_1.ApiConnection();
        const getControls = new emass_client_1.ControlsApi(apiCxn.configuration, apiCxn.basePath, apiCxn.axiosInstances);
        // Order is important here
        getControls.getSystemControls(flags.systemId, flags.acronyms).then((response) => {
            console.log((0, json_colorizer_1.default)((0, outputFormatter_1.outputFormat)(response)));
        }).catch((error) => console.error((0, json_colorizer_1.default)((0, outputError_1.outputError)(error))));
    }
}
exports.default = EmasserGetControls;
