import { ExecJSON } from 'inspecjs';
import { BaseCommand } from '../../utils/oclif/baseCommand';
export default class AWSConfig2HDF extends BaseCommand<typeof AWSConfig2HDF> {
    static readonly usage = "<%= command.id %> -r <region> -o <hdf-scan-results-json> [-h] [-a <access-key-id>] [-s <secret-access-key>] [-t <session-token>] [-i]";
    static readonly description = "Pull Configuration findings from AWS Config and convert into a Heimdall Data Format JSON file";
    static readonly examples: string[];
    static readonly flags: {
        accessKeyId: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        secretAccessKey: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        sessionToken: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        region: import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
        insecure: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        certificate: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        output: import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
    };
    ensureRefs(output: ExecJSON.Execution): ExecJSON.Execution;
    run(): Promise<void>;
}
