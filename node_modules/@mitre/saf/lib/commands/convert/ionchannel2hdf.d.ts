import { BaseCommand } from '../../utils/oclif/baseCommand';
export default class IonChannel2HDF extends BaseCommand<typeof IonChannel2HDF> {
    static readonly usage = "convert ionchannel2hdf -o <hdf-output-folder> [-h] (-i <ionchannel-json>... | -a <api-key> -t <team-name> [--raw ] [-p <project>...] [-A ]) [-L info|warn|debug|verbose]";
    static readonly description = "Pull and translate SBOM data from Ion Channel into Heimdall Data Format";
    static readonly examples: {
        description: string;
        command: string;
    }[];
    static readonly flags: {
        input: import("@oclif/core/interfaces").OptionFlag<string[] | undefined, import("@oclif/core/interfaces").CustomOptions>;
        apiKey: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        teamName: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        output: import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
        raw: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        project: import("@oclif/core/interfaces").OptionFlag<string[] | undefined, import("@oclif/core/interfaces").CustomOptions>;
        allProjects: import("@oclif/core/interfaces").BooleanFlag<boolean>;
    };
    run(): Promise<void>;
}
