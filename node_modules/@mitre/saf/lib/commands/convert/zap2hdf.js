"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const fs_1 = tslib_1.__importDefault(require("fs"));
const hdf_converters_1 = require("@mitre/hdf-converters");
const global_1 = require("../../utils/global");
class Zap2HDF extends core_1.Command {
    async run() {
        const { flags } = await this.parse(Zap2HDF);
        const converter = new hdf_converters_1.ZapMapper(fs_1.default.readFileSync(flags.input, 'utf8'), flags.name);
        fs_1.default.writeFileSync((0, global_1.checkSuffix)(flags.output), JSON.stringify(converter.toHdf()));
    }
}
exports.default = Zap2HDF;
Zap2HDF.usage = 'convert zap2hdf -i, --input=JSON -n, --name=NAME -o, --output=OUTPUT';
Zap2HDF.description = 'Translate a OWASP ZAP results JSON to HDF format Json be viewed on Heimdall';
Zap2HDF.examples = ['saf convert zap2hdf -i zap_results.json -n site_name -o scan_results.json'];
Zap2HDF.flags = {
    help: core_1.Flags.help({ char: 'h' }),
    input: core_1.Flags.string({ char: 'i', required: true }),
    name: core_1.Flags.string({ char: 'n', required: true }),
    output: core_1.Flags.string({ char: 'o', required: true }),
};
