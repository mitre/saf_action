"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const fs_1 = tslib_1.__importDefault(require("fs"));
const hdf_converters_1 = require("@mitre/hdf-converters");
const files_json_1 = tslib_1.__importDefault(require("../../resources/files.json"));
class HDF2XCCDF extends core_1.Command {
    static usage = 'convert hdf2xccdf -i <hdf-scan-results-json> -o <output-xccdf-xml> [-h]';
    static description = 'Translate an HDF file into an XCCDF XML';
    static examples = ['saf convert hdf2xccdf -i hdf_input.json -o xccdf-results.xml'];
    static flags = {
        help: core_1.Flags.help({ char: 'h' }),
        input: core_1.Flags.string({ char: 'i', required: true, description: 'Input HDF file' }),
        output: core_1.Flags.string({ char: 'o', required: true, description: 'Output HDF JSON File' }),
    };
    async run() {
        const { flags } = await this.parse(HDF2XCCDF);
        const converter = new hdf_converters_1.FromHDFToXCCDFMapper(fs_1.default.readFileSync(flags.input, 'utf8'), files_json_1.default['xccdfTemplate.xml'].data);
        fs_1.default.writeFileSync(flags.output, converter.toXCCDF());
    }
}
exports.default = HDF2XCCDF;
