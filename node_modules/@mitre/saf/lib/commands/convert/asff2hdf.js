"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const fs_1 = tslib_1.__importDefault(require("fs"));
const hdf_converters_1 = require("@mitre/hdf-converters");
const global_1 = require("../../utils/global");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
const path_1 = tslib_1.__importDefault(require("path"));
class ASFF2HDF extends core_1.Command {
    async run() {
        const { flags } = await this.parse(ASFF2HDF);
        let securityhub;
        if (flags.securityhub) {
            securityhub = flags.securityhub.map(file => fs_1.default.readFileSync(file, 'utf8'));
        }
        const converter = new hdf_converters_1.ASFFResults(fs_1.default.readFileSync(flags.input, 'utf8'), securityhub);
        const results = converter.toHdf();
        fs_1.default.mkdirSync(flags.output);
        lodash_1.default.forOwn(results, (result, filename) => {
            fs_1.default.writeFileSync(path_1.default.join(flags.output, (0, global_1.checkSuffix)(filename)), JSON.stringify(result));
        });
    }
}
exports.default = ASFF2HDF;
ASFF2HDF.usage = 'convert asff2hdf -i <asff-finding-json> [--securityhub <standard-1-json> ... <standard-n-json>] -o <hdf-scan-results-json-folder>';
ASFF2HDF.description = 'Translate a AWS Security Finding Format JSON into a Heimdall Data Format JSON file(s)';
ASFF2HDF.examples = [
    'saf convert asff2hdf -i asff-findings.json -o output-folder-name',
    'saf convert asff2hdf -i asff-findings.json --securityhub <standard-1-json> ... --securityhub <standard-n-json> -o output-folder-name',
];
ASFF2HDF.flags = {
    help: core_1.Flags.help({ char: 'h' }),
    input: core_1.Flags.string({
        char: 'i',
        required: true,
        description: 'Input ASFF JSON file',
    }),
    securityhub: core_1.Flags.string({
        required: false,
        multiple: true,
        description: 'Additional input files to provide context that an ASFF file needs such as the CIS AWS Foundations or AWS Foundational Security Best Practices documents (in ASFF compliant JSON form)',
    }),
    output: core_1.Flags.string({
        char: 'o',
        required: true,
        description: 'Output HDF JSON folder',
    }),
};
