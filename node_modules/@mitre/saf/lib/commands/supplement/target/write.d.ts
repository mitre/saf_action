import { BaseCommand } from '../../../utils/oclif/baseCommand';
export default class WriteTarget extends BaseCommand<typeof WriteTarget> {
    static readonly usage = "<%= command.id %> -i <input-hdf-json> (-f <input-target-json> | -d <target-json>) [-o <output-hdf-json>]";
    static readonly summary = "Overwrite the `target` attribute in a given HDF file with the provided `target` JSON data";
    static readonly description = "Target data can be any context/structure. See sample ideas at https://github.com/mitre/saf/wiki/Supplement-HDF-files-with-additional-information-(ex.-%60passthrough%60,-%60target%60)";
    static examples: {
        description: string;
        command: string;
    }[];
    static readonly flags: {
        help: import("@oclif/core/interfaces").BooleanFlag<void>;
        input: import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
        targetFile: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        targetData: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        output: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
    };
    run(): Promise<void>;
}
