import { ContextualizedControl, ContextualizedEvaluation } from 'inspecjs';
import { IDetail, IOutputData, IResultSeverity, IResultStatus } from './html-types';
type InputData = {
    data: ContextualizedEvaluation | string;
    fileName: string;
    fileID: string;
};
type ProcessedData = {
    data: ContextualizedEvaluation;
    fileName: string;
    fileID: string;
};
declare enum FileExportTypes {
    Executive = "Executive",
    Manager = "Manager",
    Administrator = "Administrator"
}
export declare class FromHDFToHTMLMapper {
    private iconHTMLStore;
    outputData: IOutputData;
    constructor(files: InputData[], exportType: FileExportTypes);
    addFiledata(file: ProcessedData, exportType: FileExportTypes): void;
    addProfileDetails(results: ContextualizedControl[]): void;
    addResultDetails(result: ContextualizedControl, resultLevels: ContextualizedControl[]): ContextualizedControl & {
        details: IDetail[];
    } & {
        resultID: string;
    } & {
        resultStatus: IResultStatus;
    } & {
        resultSeverity: IResultSeverity;
    } & {
        controlTags: string[];
    };
    iconDataToSVG(iconData: string, fill: string, widthPx?: number, heightPx?: number, description?: string): string;
    replaceIllegalCharacters(text: string): string;
    toHTML(path: string): Promise<string>;
}
export {};
