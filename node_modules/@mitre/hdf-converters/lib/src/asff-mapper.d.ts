import { ExecJSON } from 'inspecjs';
import { BaseConverter } from './base-converter';
declare enum SpecialCasing {
    FirewallManager = "AWS Firewall Manager",
    Prowler = "Prowler",
    SecurityHub = "AWS Security Hub",
    Trivy = "Aqua Trivy",
    HDF2ASFF = "MITRE SAF HDF2ASFF",
    Default = "Default"
}
export declare class ASFFMapper extends BaseConverter {
    meta: Record<string, string | undefined> | undefined;
    supportingDocs: Map<SpecialCasing, Record<string, Record<string, unknown>>>;
    statusReason(finding: unknown): string | undefined;
    setMappings(): void;
    constructor(asff: Record<string, unknown>, supportingDocs: Map<SpecialCasing, Record<string, Record<string, unknown>>>, meta?: Record<string, string | undefined> | undefined);
}
export declare class ASFFResults {
    data: Record<string, Record<string, unknown>[]>;
    meta: Record<string, string | undefined> | undefined;
    supportingDocs: Map<SpecialCasing, Record<string, Record<string, unknown>>>;
    constructor(asffJson: string, securityhubStandardsJsonArray?: undefined | string[], meta?: Record<string, string | undefined> | undefined);
    toHdf(): Record<string, ExecJSON.Execution>;
}
export {};
