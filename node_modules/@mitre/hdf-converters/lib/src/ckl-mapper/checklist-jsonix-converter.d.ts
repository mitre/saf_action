import { Asset, Checklist, Sidata, Stigdata, Vuln } from '../../types/checklistJsonix';
import { JsonixIntermediateConverter } from '../jsonix-intermediate-converter';
export declare type ChecklistObject = {
    asset: ChecklistAsset;
    stigs: ChecklistStig[];
    jsonixData: Checklist;
};
declare type ChecklistAsset = Asset;
declare type ChecklistStig = {
    header: StigHeader;
    vulns: ChecklistVuln[];
};
declare type StigHeader = {
    version: string;
    classification: 'UNCLASSIFIED' | 'UNCLASSIFIED//FOR OFFICIAL USE ONLY' | 'CUI';
    customname?: string;
    stigid: string;
    description: string;
    filename: string;
    releaseinfo?: string;
    title: string;
    uuid: string;
    notice?: string;
    source?: string;
};
export declare type ChecklistVuln = Omit<Vuln, 'stigdata' | 'status'> & {
    status: StatusMapping;
    vulnNum: string;
    severity: Severity;
    groupTitle: string;
    ruleId: string;
    ruleVersion: string;
    ruleTitle: string;
    vulnDiscuss: string;
    iaControls: string;
    checkContent: string;
    fixText: string;
    falsePositives: string;
    falseNegatives: string;
    documentable: boolean;
    mitigations: string;
    potentialImpact: string;
    thirdPartyTools: string;
    mitigationControl: string;
    responsibility: string;
    securityOverrideGuidance: string;
    checkContentRef: string;
    weight: string;
    class: 'Unclass' | 'FOUO' | 'CUI';
    stigRef: string;
    targetKey: string;
    stigUuid: string;
    legacyId: string;
    cciRef: string;
};
declare enum StatusMapping {
    NotAFinding = "Passed",
    Open = "Failed",
    Not_Applicable = "Not Applicable",
    Not_Reviewed = "Not Reviewed"
}
export declare enum Severity {
    Empty = "",
    High = "high",
    Low = "low",
    Medium = "medium"
}
export declare class ChecklistJsonixConverter extends JsonixIntermediateConverter<Checklist, ChecklistObject> {
    getValueFromAttributeName<T extends Stigdata | Sidata>(data: T[], tag: string): string;
    toIntermediateObject(jsonixData: Checklist): ChecklistObject;
}
export {};
