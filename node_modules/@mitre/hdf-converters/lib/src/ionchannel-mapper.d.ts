import { AxiosInstance } from 'axios';
import { ExecJSON } from 'inspecjs';
import { IonChannelAnalysisResponse } from '../types/ionchannelAnalysis';
import { Project } from '../types/ionchannelProjects';
import { Team } from '../types/ionchannelTeams';
import { BaseConverter, ILookupPath, MappedTransform } from './base-converter';
export declare class IonChannelAPIMapper {
    apiKey: string;
    projectId?: string;
    teamId?: string;
    analysisId?: string;
    apiClient: AxiosInstance;
    constructor(apiKey: string, projectId?: string, teamId?: string, analysisId?: string);
    toHdf(): Promise<ExecJSON.Execution>;
    setTeam(teamName: string): Promise<void>;
    getTeams(): Promise<Team[]>;
    setProject(projectName: string): Promise<void>;
    getProjects(): Promise<Project[]>;
    getAnalysis(): Promise<IonChannelAnalysisResponse>;
}
export declare class IonChannelMapper extends BaseConverter {
    mappings: MappedTransform<ExecJSON.Execution & {
        passthrough: unknown;
    }, ILookupPath>;
    constructor(ionchannelJson: string);
}
