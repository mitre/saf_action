"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AwsConfigMapping = void 0;
const lodash_1 = __importDefault(require("lodash"));
const AwsConfigMappingData_1 = require("./AwsConfigMappingData");
class AwsConfigMapping {
    constructor() {
        this.awsConfigRuleNameMappings = {};
        this.awsConfigRuleSourceIdentifierMappings = {};
        AwsConfigMappingData_1.data.forEach((mapping) => {
            this.awsConfigRuleNameMappings[mapping.AwsConfigRuleName] =
                mapping['NIST-ID'].split('|');
            this.awsConfigRuleSourceIdentifierMappings[mapping.AwsConfigRuleSourceIdentifier] = mapping['NIST-ID'].split('|');
        });
    }
    searchNIST(identifiers) {
        if (identifiers.length === 0) {
            return [];
        }
        else {
            let matches = [];
            Object.entries(this.awsConfigRuleNameMappings).forEach(([awsConfigRuleName, NISTTags]) => {
                identifiers.forEach((identifier) => {
                    if (identifier.toLowerCase().toLowerCase().includes(awsConfigRuleName)) {
                        matches = matches.concat(NISTTags);
                    }
                });
            });
            Object.entries(this.awsConfigRuleSourceIdentifierMappings).forEach(([awsConfigRuleSourceIdentifier, NISTTags]) => {
                identifiers.forEach((identifier) => {
                    if (identifier
                        .toLowerCase()
                        .includes(awsConfigRuleSourceIdentifier.toLowerCase())) {
                        matches = matches.concat(NISTTags);
                    }
                });
            });
            return lodash_1.default.uniq(matches);
        }
    }
}
exports.AwsConfigMapping = AwsConfigMapping;
//# sourceMappingURL=AwsConfigMapping.js.map