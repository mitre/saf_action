"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CweNistMapping = void 0;
const CweNistMappingData_1 = require("./CweNistMappingData");
const CweNistMappingItem_1 = require("./CweNistMappingItem");
class CweNistMapping {
    constructor() {
        this.data = [];
        if (Array.isArray(CweNistMappingData_1.data)) {
            CweNistMappingData_1.data.forEach((line) => {
                this.data.push(new CweNistMappingItem_1.CweNistMappingItem(line));
            });
        }
    }
    nistFilter(identifiers, defaultNist) {
        const DEFAULT_NIST_TAG = defaultNist;
        if (!Array.isArray(identifiers)) {
            identifiers = [identifiers];
        }
        if (identifiers.length === 0) {
            if (DEFAULT_NIST_TAG !== undefined) {
                return DEFAULT_NIST_TAG;
            }
            else {
                return [];
            }
        }
        else {
            const matches = [];
            identifiers.forEach((id) => {
                const key = parseInt(id);
                const item = this.data.find((element) => element.id === key);
                if (item !== null &&
                    item !== undefined &&
                    item.nistId !== '' &&
                    matches.indexOf(item.nistId) === -1) {
                    matches.push(item.nistId);
                }
            });
            if (matches.length === 0 && DEFAULT_NIST_TAG !== undefined) {
                return DEFAULT_NIST_TAG;
            }
            return matches;
        }
    }
}
exports.CweNistMapping = CweNistMapping;
//# sourceMappingURL=CweNistMapping.js.map